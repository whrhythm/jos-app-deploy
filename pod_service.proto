syntax = "proto3";

package pod.v1alpha1;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "./pkg/pb/;pb";

service PodManagerService {
  // 删除 Pod
  rpc DeletePod(DeletePodRequest) returns (DeletePodResponse) {
    option (google.api.http) = {
      delete: "/v1alpha1/namespaces/{namespace}/pods/{pod_name}"
    };
  }

  // 获取 Pod 日志 (流式)
  rpc GetPodLogs(GetPodLogsRequest) returns (stream LogChunk) {
    option (google.api.http) = {
      get: "/v1alpha1/namespaces/{namespace}/pods/{pod_name}/logs"
    };
  }

  // 进入 Pod 终端 (WebSocket/流式)
  rpc ExecPodTerminal(stream TerminalMessage) returns (stream TerminalMessage) {
    option (google.api.http) = {
      get: "/v1alpha1/namespaces/{namespace}/pods/{pod_name}/exec"
    };
  }

  // 配置水平自动伸缩 (HPA)
  rpc ConfigureHorizontalAutoscaling(ConfigureHPARequest) returns (ConfigureHPAResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/namespaces/{namespace}/hpa"
      body: "*"
    };
  }

  // 配置垂直自动伸缩 (VPA)
  rpc ConfigureVerticalAutoscaling(ConfigureVPARequest) returns (ConfigureVPAResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/namespaces/{namespace}/vpa"
      body: "*"
    };
  }

  // 金丝雀发布
  rpc CreateCanaryDeployment(CreateCanaryRequest) returns (CreateCanaryResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/namespaces/{namespace}/rollouts/{rollout_name}/canary"
      body: "*"
    };
  }

  // 蓝绿发布
  rpc CreateBlueGreenDeployment(CreateBlueGreenRequest) returns (CreateBlueGreenResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/namespaces/{namespace}/rollouts/{rollout_name}/bluegreen"
      body: "*"
    };
  }
}
