// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0--rc1
// source: helm_service.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 1. 获取 Chart 列表
type ListChartsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepoName      string                 `protobuf:"bytes,1,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"` // 私有仓库名称（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChartsRequest) Reset() {
	*x = ListChartsRequest{}
	mi := &file_helm_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartsRequest) ProtoMessage() {}

func (x *ListChartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChartsRequest.ProtoReflect.Descriptor instead.
func (*ListChartsRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListChartsRequest) GetRepoName() string {
	if x != nil {
		return x.RepoName
	}
	return ""
}

type ListChartsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Charts        []*ChartInfo           `protobuf:"bytes,1,rep,name=charts,proto3" json:"charts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChartsResponse) Reset() {
	*x = ListChartsResponse{}
	mi := &file_helm_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartsResponse) ProtoMessage() {}

func (x *ListChartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChartsResponse.ProtoReflect.Descriptor instead.
func (*ListChartsResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListChartsResponse) GetCharts() []*ChartInfo {
	if x != nil {
		return x.Charts
	}
	return nil
}

type ChartInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                     // Chart 名称
	ChartVersion  string                 `protobuf:"bytes,2,opt,name=chart_version,json=chartVersion,proto3" json:"chart_version,omitempty"` // Chart 版本
	IconUrl       string                 `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`                // 图标 URL
	AppVersion    string                 `protobuf:"bytes,4,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`       // 应用版本
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                       // 应用描述
	UpdateDate    string                 `protobuf:"bytes,6,opt,name=updateDate,proto3" json:"updateDate,omitempty"`                         // 更新时间
	UpdateUser    string                 `protobuf:"bytes,7,opt,name=updateUser,proto3" json:"updateUser,omitempty"`                         // 更新者
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChartInfo) Reset() {
	*x = ChartInfo{}
	mi := &file_helm_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChartInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartInfo) ProtoMessage() {}

func (x *ChartInfo) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartInfo.ProtoReflect.Descriptor instead.
func (*ChartInfo) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{2}
}

func (x *ChartInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChartInfo) GetChartVersion() string {
	if x != nil {
		return x.ChartVersion
	}
	return ""
}

func (x *ChartInfo) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *ChartInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *ChartInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChartInfo) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

func (x *ChartInfo) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

// 2. 配置私有仓库
type ConfigureRepoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                   // 仓库名称
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                     // 仓库地址
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`           // 用户名（可选）
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`           // 密码（可选）
	CaFile        string                 `protobuf:"bytes,5,opt,name=ca_file,json=caFile,proto3" json:"ca_file,omitempty"` // CA 证书（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureRepoRequest) Reset() {
	*x = ConfigureRepoRequest{}
	mi := &file_helm_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureRepoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureRepoRequest) ProtoMessage() {}

func (x *ConfigureRepoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureRepoRequest.ProtoReflect.Descriptor instead.
func (*ConfigureRepoRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigureRepoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigureRepoRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ConfigureRepoRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ConfigureRepoRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ConfigureRepoRequest) GetCaFile() string {
	if x != nil {
		return x.CaFile
	}
	return ""
}

type ConfigureRepoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureRepoResponse) Reset() {
	*x = ConfigureRepoResponse{}
	mi := &file_helm_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureRepoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureRepoResponse) ProtoMessage() {}

func (x *ConfigureRepoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureRepoResponse.ProtoReflect.Descriptor instead.
func (*ConfigureRepoResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigureRepoResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type K8SObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Object        *anypb.Any             `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"` // 存储任意 Kubernetes 对象
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *K8SObject) Reset() {
	*x = K8SObject{}
	mi := &file_helm_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *K8SObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SObject) ProtoMessage() {}

func (x *K8SObject) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SObject.ProtoReflect.Descriptor instead.
func (*K8SObject) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{5}
}

func (x *K8SObject) GetObject() *anypb.Any {
	if x != nil {
		return x.Object
	}
	return nil
}

type K8SObjectList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*K8SObject           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // 相当于 []runtime.Object
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *K8SObjectList) Reset() {
	*x = K8SObjectList{}
	mi := &file_helm_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *K8SObjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SObjectList) ProtoMessage() {}

func (x *K8SObjectList) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SObjectList.ProtoReflect.Descriptor instead.
func (*K8SObjectList) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{6}
}

func (x *K8SObjectList) GetItems() []*K8SObject {
	if x != nil {
		return x.Items
	}
	return nil
}

// 3. 安装 Chart
type InstallChartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`           // Chart 名称
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`     // Chart 版本
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"` // 目标命名空间
	Values        string                 `protobuf:"bytes,4,opt,name=values,proto3" json:"values,omitempty"`       // values.yaml 内容（JSON/YAML 字符串）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallChartRequest) Reset() {
	*x = InstallChartRequest{}
	mi := &file_helm_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallChartRequest) ProtoMessage() {}

func (x *InstallChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallChartRequest.ProtoReflect.Descriptor instead.
func (*InstallChartRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{7}
}

func (x *InstallChartRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstallChartRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstallChartRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *InstallChartRequest) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

type InstallChartResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	ReleaseName   string                    `protobuf:"bytes,1,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"` // Helm Release 名称
	FirstDeployed string                    `protobuf:"bytes,2,opt,name=first_deployed,json=firstDeployed,proto3" json:"first_deployed,omitempty"`
	LastDeployed  string                    `protobuf:"bytes,3,opt,name=last_deployed,json=lastDeployed,proto3" json:"last_deployed,omitempty"`
	Deleted       string                    `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Description   string                    `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Status        string                    `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Entries       map[string]*K8SObjectList `protobuf:"bytes,7,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallChartResponse) Reset() {
	*x = InstallChartResponse{}
	mi := &file_helm_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallChartResponse) ProtoMessage() {}

func (x *InstallChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallChartResponse.ProtoReflect.Descriptor instead.
func (*InstallChartResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{8}
}

func (x *InstallChartResponse) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *InstallChartResponse) GetFirstDeployed() string {
	if x != nil {
		return x.FirstDeployed
	}
	return ""
}

func (x *InstallChartResponse) GetLastDeployed() string {
	if x != nil {
		return x.LastDeployed
	}
	return ""
}

func (x *InstallChartResponse) GetDeleted() string {
	if x != nil {
		return x.Deleted
	}
	return ""
}

func (x *InstallChartResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InstallChartResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InstallChartResponse) GetEntries() map[string]*K8SObjectList {
	if x != nil {
		return x.Entries
	}
	return nil
}

// 4. 监控安装状态
type WatchInstallStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`           // Chart 名称
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"` // 命名空间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchInstallStatusRequest) Reset() {
	*x = WatchInstallStatusRequest{}
	mi := &file_helm_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchInstallStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchInstallStatusRequest) ProtoMessage() {}

func (x *WatchInstallStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchInstallStatusRequest.ProtoReflect.Descriptor instead.
func (*WatchInstallStatusRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{9}
}

func (x *WatchInstallStatusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WatchInstallStatusRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type InstallStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Phase         string                 `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty"`     // Installing | Deployed | Failed
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 状态详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallStatus) Reset() {
	*x = InstallStatus{}
	mi := &file_helm_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallStatus) ProtoMessage() {}

func (x *InstallStatus) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallStatus.ProtoReflect.Descriptor instead.
func (*InstallStatus) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{10}
}

func (x *InstallStatus) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *InstallStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 5. 监控 Pod 状态
type WatchPodStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`           // Chart 名称
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"` // 命名空间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchPodStatusRequest) Reset() {
	*x = WatchPodStatusRequest{}
	mi := &file_helm_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchPodStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPodStatusRequest) ProtoMessage() {}

func (x *WatchPodStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPodStatusRequest.ProtoReflect.Descriptor instead.
func (*WatchPodStatusRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{11}
}

func (x *WatchPodStatusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WatchPodStatusRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type PodStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PodName       string                 `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // Running | Pending | Failed
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PodStatus) Reset() {
	*x = PodStatus{}
	mi := &file_helm_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PodStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodStatus) ProtoMessage() {}

func (x *PodStatus) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodStatus.ProtoReflect.Descriptor instead.
func (*PodStatus) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{12}
}

func (x *PodStatus) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *PodStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PodStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 6. 检查 ApisixRoute
type CheckApisixRouteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`           // Chart 名称
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"` // 命名空间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckApisixRouteRequest) Reset() {
	*x = CheckApisixRouteRequest{}
	mi := &file_helm_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckApisixRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckApisixRouteRequest) ProtoMessage() {}

func (x *CheckApisixRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckApisixRouteRequest.ProtoReflect.Descriptor instead.
func (*CheckApisixRouteRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{13}
}

func (x *CheckApisixRouteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CheckApisixRouteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type CheckApisixRouteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exists        bool                   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	RouteUrl      string                 `protobuf:"bytes,2,opt,name=route_url,json=routeUrl,proto3" json:"route_url,omitempty"` // 访问方式（如 http://apisix-gateway/route）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckApisixRouteResponse) Reset() {
	*x = CheckApisixRouteResponse{}
	mi := &file_helm_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckApisixRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckApisixRouteResponse) ProtoMessage() {}

func (x *CheckApisixRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckApisixRouteResponse.ProtoReflect.Descriptor instead.
func (*CheckApisixRouteResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{14}
}

func (x *CheckApisixRouteResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *CheckApisixRouteResponse) GetRouteUrl() string {
	if x != nil {
		return x.RouteUrl
	}
	return ""
}

// 7. 创建 Chart 应用
type CreateChartApplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ChartRef      string                 `protobuf:"bytes,3,opt,name=chart_ref,json=chartRef,proto3" json:"chart_ref,omitempty"` // Chart 引用（如 repo/chart）
	Values        string                 `protobuf:"bytes,4,opt,name=values,proto3" json:"values,omitempty"`                     // values.yaml 内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChartApplicationRequest) Reset() {
	*x = CreateChartApplicationRequest{}
	mi := &file_helm_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChartApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChartApplicationRequest) ProtoMessage() {}

func (x *CreateChartApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChartApplicationRequest.ProtoReflect.Descriptor instead.
func (*CreateChartApplicationRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{15}
}

func (x *CreateChartApplicationRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateChartApplicationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateChartApplicationRequest) GetChartRef() string {
	if x != nil {
		return x.ChartRef
	}
	return ""
}

func (x *CreateChartApplicationRequest) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

type CreateChartApplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChartApplicationResponse) Reset() {
	*x = CreateChartApplicationResponse{}
	mi := &file_helm_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChartApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChartApplicationResponse) ProtoMessage() {}

func (x *CreateChartApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChartApplicationResponse.ProtoReflect.Descriptor instead.
func (*CreateChartApplicationResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{16}
}

func (x *CreateChartApplicationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 8. 获取 Pod 日志
type GetPodLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName       string                 `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	TailLines     int32                  `protobuf:"varint,3,opt,name=tail_lines,json=tailLines,proto3" json:"tail_lines,omitempty"` // 日志行数（可选）
	Follow        bool                   `protobuf:"varint,4,opt,name=follow,proto3" json:"follow,omitempty"`                        // 是否实时流式传输（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPodLogsRequest) Reset() {
	*x = GetPodLogsRequest{}
	mi := &file_helm_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPodLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPodLogsRequest) ProtoMessage() {}

func (x *GetPodLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPodLogsRequest.ProtoReflect.Descriptor instead.
func (*GetPodLogsRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetPodLogsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetPodLogsRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *GetPodLogsRequest) GetTailLines() int32 {
	if x != nil {
		return x.TailLines
	}
	return 0
}

func (x *GetPodLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

type LogChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"` // 日志内容（二进制流）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogChunk) Reset() {
	*x = LogChunk{}
	mi := &file_helm_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogChunk) ProtoMessage() {}

func (x *LogChunk) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogChunk.ProtoReflect.Descriptor instead.
func (*LogChunk) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{18}
}

func (x *LogChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// 9. 检查 Pod 终端
type CheckPodTerminalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName       string                 `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	Container     string                 `protobuf:"bytes,3,opt,name=container,proto3" json:"container,omitempty"` // 容器名称（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPodTerminalRequest) Reset() {
	*x = CheckPodTerminalRequest{}
	mi := &file_helm_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPodTerminalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPodTerminalRequest) ProtoMessage() {}

func (x *CheckPodTerminalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPodTerminalRequest.ProtoReflect.Descriptor instead.
func (*CheckPodTerminalRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{19}
}

func (x *CheckPodTerminalRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CheckPodTerminalRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *CheckPodTerminalRequest) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

type CheckPodTerminalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Supported     bool                   `protobuf:"varint,1,opt,name=supported,proto3" json:"supported,omitempty"`                          // 是否支持终端
	WebsocketUrl  string                 `protobuf:"bytes,2,opt,name=websocket_url,json=websocketUrl,proto3" json:"websocket_url,omitempty"` // WebSocket 连接地址（如 ws://service/terminal）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPodTerminalResponse) Reset() {
	*x = CheckPodTerminalResponse{}
	mi := &file_helm_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPodTerminalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPodTerminalResponse) ProtoMessage() {}

func (x *CheckPodTerminalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPodTerminalResponse.ProtoReflect.Descriptor instead.
func (*CheckPodTerminalResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{20}
}

func (x *CheckPodTerminalResponse) GetSupported() bool {
	if x != nil {
		return x.Supported
	}
	return false
}

func (x *CheckPodTerminalResponse) GetWebsocketUrl() string {
	if x != nil {
		return x.WebsocketUrl
	}
	return ""
}

var File_helm_service_proto protoreflect.FileDescriptor

const file_helm_service_proto_rawDesc = "" +
	"\n" +
	"\x12helm_service.proto\x12\rhelm.v1alpha1\x1a\x1cgoogle/api/annotations.proto\x1a\x19google/protobuf/any.proto\"0\n" +
	"\x11ListChartsRequest\x12\x1b\n" +
	"\trepo_name\x18\x01 \x01(\tR\brepoName\"F\n" +
	"\x12ListChartsResponse\x120\n" +
	"\x06charts\x18\x01 \x03(\v2\x18.helm.v1alpha1.ChartInfoR\x06charts\"\xe2\x01\n" +
	"\tChartInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rchart_version\x18\x02 \x01(\tR\fchartVersion\x12\x19\n" +
	"\bicon_url\x18\x03 \x01(\tR\aiconUrl\x12\x1f\n" +
	"\vapp_version\x18\x04 \x01(\tR\n" +
	"appVersion\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"updateDate\x18\x06 \x01(\tR\n" +
	"updateDate\x12\x1e\n" +
	"\n" +
	"updateUser\x18\a \x01(\tR\n" +
	"updateUser\"\x8d\x01\n" +
	"\x14ConfigureRepoRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x17\n" +
	"\aca_file\x18\x05 \x01(\tR\x06caFile\"1\n" +
	"\x15ConfigureRepoResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"9\n" +
	"\tK8sObject\x12,\n" +
	"\x06object\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x06object\"?\n" +
	"\rK8sObjectList\x12.\n" +
	"\x05items\x18\x01 \x03(\v2\x18.helm.v1alpha1.K8sObjectR\x05items\"y\n" +
	"\x13InstallChartRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06values\x18\x04 \x01(\tR\x06values\"\xff\x02\n" +
	"\x14InstallChartResponse\x12!\n" +
	"\frelease_name\x18\x01 \x01(\tR\vreleaseName\x12%\n" +
	"\x0efirst_deployed\x18\x02 \x01(\tR\rfirstDeployed\x12#\n" +
	"\rlast_deployed\x18\x03 \x01(\tR\flastDeployed\x12\x18\n" +
	"\adeleted\x18\x04 \x01(\tR\adeleted\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12J\n" +
	"\aentries\x18\a \x03(\v20.helm.v1alpha1.InstallChartResponse.EntriesEntryR\aentries\x1aX\n" +
	"\fEntriesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.helm.v1alpha1.K8sObjectListR\x05value:\x028\x01\"M\n" +
	"\x19WatchInstallStatusRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"?\n" +
	"\rInstallStatus\x12\x14\n" +
	"\x05phase\x18\x01 \x01(\tR\x05phase\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"I\n" +
	"\x15WatchPodStatusRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"X\n" +
	"\tPodStatus\x12\x19\n" +
	"\bpod_name\x18\x01 \x01(\tR\apodName\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"K\n" +
	"\x17CheckApisixRouteRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"O\n" +
	"\x18CheckApisixRouteResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\x12\x1b\n" +
	"\troute_url\x18\x02 \x01(\tR\brouteUrl\"\x86\x01\n" +
	"\x1dCreateChartApplicationRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\tchart_ref\x18\x03 \x01(\tR\bchartRef\x12\x16\n" +
	"\x06values\x18\x04 \x01(\tR\x06values\":\n" +
	"\x1eCreateChartApplicationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x83\x01\n" +
	"\x11GetPodLogsRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x19\n" +
	"\bpod_name\x18\x02 \x01(\tR\apodName\x12\x1d\n" +
	"\n" +
	"tail_lines\x18\x03 \x01(\x05R\ttailLines\x12\x16\n" +
	"\x06follow\x18\x04 \x01(\bR\x06follow\"$\n" +
	"\bLogChunk\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\"p\n" +
	"\x17CheckPodTerminalRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x19\n" +
	"\bpod_name\x18\x02 \x01(\tR\apodName\x12\x1c\n" +
	"\tcontainer\x18\x03 \x01(\tR\tcontainer\"]\n" +
	"\x18CheckPodTerminalResponse\x12\x1c\n" +
	"\tsupported\x18\x01 \x01(\bR\tsupported\x12#\n" +
	"\rwebsocket_url\x18\x02 \x01(\tR\fwebsocketUrl2\xed\t\n" +
	"\x12HelmManagerService\x12k\n" +
	"\n" +
	"ListCharts\x12 .helm.v1alpha1.ListChartsRequest\x1a!.helm.v1alpha1.ListChartsResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1alpha1/charts\x12v\n" +
	"\rConfigureRepo\x12#.helm.v1alpha1.ConfigureRepoRequest\x1a$.helm.v1alpha1.ConfigureRepoResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1alpha1/repos\x12\x8f\x01\n" +
	"\fInstallChart\x12\".helm.v1alpha1.InstallChartRequest\x1a#.helm.v1alpha1.InstallChartResponse\"6\x82\xd3\xe4\x93\x020:\x01*\"+/v1alpha1/{namespace}/charts/{name}/install\x12\x92\x01\n" +
	"\x12WatchInstallStatus\x12(.helm.v1alpha1.WatchInstallStatusRequest\x1a\x1c.helm.v1alpha1.InstallStatus\"2\x82\xd3\xe4\x93\x02,\x12*/v1alpha1/{namespace}/charts/{name}/status0\x01\x12\x84\x01\n" +
	"\x0eWatchPodStatus\x12$.helm.v1alpha1.WatchPodStatusRequest\x1a\x18.helm.v1alpha1.PodStatus\"0\x82\xd3\xe4\x93\x02*\x12(/v1alpha1/{namespace}/charts/{name}/pods0\x01\x12\x8b\x01\n" +
	"\x10CheckApisixRoute\x12&.helm.v1alpha1.CheckApisixRouteRequest\x1a'.helm.v1alpha1.CheckApisixRouteResponse\"&\x82\xd3\xe4\x93\x02 \x12\x1e/v1alpha1/charts/{name}/apisix\x12\x98\x01\n" +
	"\x16CreateChartApplication\x12,.helm.v1alpha1.CreateChartApplicationRequest\x1a-.helm.v1alpha1.CreateChartApplicationResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1alpha1/applications\x12}\n" +
	"\n" +
	"GetPodLogs\x12 .helm.v1alpha1.GetPodLogsRequest\x1a\x17.helm.v1alpha1.LogChunk\"2\x82\xd3\xe4\x93\x02,\x12*/v1alpha1/pods/{namespace}/{pod_name}/logs0\x01\x12\x9b\x01\n" +
	"\x10CheckPodTerminal\x12&.helm.v1alpha1.CheckPodTerminalRequest\x1a'.helm.v1alpha1.CheckPodTerminalResponse\"6\x82\xd3\xe4\x93\x020\x12./v1alpha1/pods/{namespace}/{pod_name}/terminalB\x0eZ\f./pkg/pb/;pbb\x06proto3"

var (
	file_helm_service_proto_rawDescOnce sync.Once
	file_helm_service_proto_rawDescData []byte
)

func file_helm_service_proto_rawDescGZIP() []byte {
	file_helm_service_proto_rawDescOnce.Do(func() {
		file_helm_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_helm_service_proto_rawDesc), len(file_helm_service_proto_rawDesc)))
	})
	return file_helm_service_proto_rawDescData
}

var file_helm_service_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_helm_service_proto_goTypes = []any{
	(*ListChartsRequest)(nil),              // 0: helm.v1alpha1.ListChartsRequest
	(*ListChartsResponse)(nil),             // 1: helm.v1alpha1.ListChartsResponse
	(*ChartInfo)(nil),                      // 2: helm.v1alpha1.ChartInfo
	(*ConfigureRepoRequest)(nil),           // 3: helm.v1alpha1.ConfigureRepoRequest
	(*ConfigureRepoResponse)(nil),          // 4: helm.v1alpha1.ConfigureRepoResponse
	(*K8SObject)(nil),                      // 5: helm.v1alpha1.K8sObject
	(*K8SObjectList)(nil),                  // 6: helm.v1alpha1.K8sObjectList
	(*InstallChartRequest)(nil),            // 7: helm.v1alpha1.InstallChartRequest
	(*InstallChartResponse)(nil),           // 8: helm.v1alpha1.InstallChartResponse
	(*WatchInstallStatusRequest)(nil),      // 9: helm.v1alpha1.WatchInstallStatusRequest
	(*InstallStatus)(nil),                  // 10: helm.v1alpha1.InstallStatus
	(*WatchPodStatusRequest)(nil),          // 11: helm.v1alpha1.WatchPodStatusRequest
	(*PodStatus)(nil),                      // 12: helm.v1alpha1.PodStatus
	(*CheckApisixRouteRequest)(nil),        // 13: helm.v1alpha1.CheckApisixRouteRequest
	(*CheckApisixRouteResponse)(nil),       // 14: helm.v1alpha1.CheckApisixRouteResponse
	(*CreateChartApplicationRequest)(nil),  // 15: helm.v1alpha1.CreateChartApplicationRequest
	(*CreateChartApplicationResponse)(nil), // 16: helm.v1alpha1.CreateChartApplicationResponse
	(*GetPodLogsRequest)(nil),              // 17: helm.v1alpha1.GetPodLogsRequest
	(*LogChunk)(nil),                       // 18: helm.v1alpha1.LogChunk
	(*CheckPodTerminalRequest)(nil),        // 19: helm.v1alpha1.CheckPodTerminalRequest
	(*CheckPodTerminalResponse)(nil),       // 20: helm.v1alpha1.CheckPodTerminalResponse
	nil,                                    // 21: helm.v1alpha1.InstallChartResponse.EntriesEntry
	(*anypb.Any)(nil),                      // 22: google.protobuf.Any
}
var file_helm_service_proto_depIdxs = []int32{
	2,  // 0: helm.v1alpha1.ListChartsResponse.charts:type_name -> helm.v1alpha1.ChartInfo
	22, // 1: helm.v1alpha1.K8sObject.object:type_name -> google.protobuf.Any
	5,  // 2: helm.v1alpha1.K8sObjectList.items:type_name -> helm.v1alpha1.K8sObject
	21, // 3: helm.v1alpha1.InstallChartResponse.entries:type_name -> helm.v1alpha1.InstallChartResponse.EntriesEntry
	6,  // 4: helm.v1alpha1.InstallChartResponse.EntriesEntry.value:type_name -> helm.v1alpha1.K8sObjectList
	0,  // 5: helm.v1alpha1.HelmManagerService.ListCharts:input_type -> helm.v1alpha1.ListChartsRequest
	3,  // 6: helm.v1alpha1.HelmManagerService.ConfigureRepo:input_type -> helm.v1alpha1.ConfigureRepoRequest
	7,  // 7: helm.v1alpha1.HelmManagerService.InstallChart:input_type -> helm.v1alpha1.InstallChartRequest
	9,  // 8: helm.v1alpha1.HelmManagerService.WatchInstallStatus:input_type -> helm.v1alpha1.WatchInstallStatusRequest
	11, // 9: helm.v1alpha1.HelmManagerService.WatchPodStatus:input_type -> helm.v1alpha1.WatchPodStatusRequest
	13, // 10: helm.v1alpha1.HelmManagerService.CheckApisixRoute:input_type -> helm.v1alpha1.CheckApisixRouteRequest
	15, // 11: helm.v1alpha1.HelmManagerService.CreateChartApplication:input_type -> helm.v1alpha1.CreateChartApplicationRequest
	17, // 12: helm.v1alpha1.HelmManagerService.GetPodLogs:input_type -> helm.v1alpha1.GetPodLogsRequest
	19, // 13: helm.v1alpha1.HelmManagerService.CheckPodTerminal:input_type -> helm.v1alpha1.CheckPodTerminalRequest
	1,  // 14: helm.v1alpha1.HelmManagerService.ListCharts:output_type -> helm.v1alpha1.ListChartsResponse
	4,  // 15: helm.v1alpha1.HelmManagerService.ConfigureRepo:output_type -> helm.v1alpha1.ConfigureRepoResponse
	8,  // 16: helm.v1alpha1.HelmManagerService.InstallChart:output_type -> helm.v1alpha1.InstallChartResponse
	10, // 17: helm.v1alpha1.HelmManagerService.WatchInstallStatus:output_type -> helm.v1alpha1.InstallStatus
	12, // 18: helm.v1alpha1.HelmManagerService.WatchPodStatus:output_type -> helm.v1alpha1.PodStatus
	14, // 19: helm.v1alpha1.HelmManagerService.CheckApisixRoute:output_type -> helm.v1alpha1.CheckApisixRouteResponse
	16, // 20: helm.v1alpha1.HelmManagerService.CreateChartApplication:output_type -> helm.v1alpha1.CreateChartApplicationResponse
	18, // 21: helm.v1alpha1.HelmManagerService.GetPodLogs:output_type -> helm.v1alpha1.LogChunk
	20, // 22: helm.v1alpha1.HelmManagerService.CheckPodTerminal:output_type -> helm.v1alpha1.CheckPodTerminalResponse
	14, // [14:23] is the sub-list for method output_type
	5,  // [5:14] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_helm_service_proto_init() }
func file_helm_service_proto_init() {
	if File_helm_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_helm_service_proto_rawDesc), len(file_helm_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_helm_service_proto_goTypes,
		DependencyIndexes: file_helm_service_proto_depIdxs,
		MessageInfos:      file_helm_service_proto_msgTypes,
	}.Build()
	File_helm_service_proto = out.File
	file_helm_service_proto_goTypes = nil
	file_helm_service_proto_depIdxs = nil
}
