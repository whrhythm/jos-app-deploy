// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0--rc1
// source: helm_service.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 1. 获取 Chart 列表
type ListChartsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepoName      string                 `protobuf:"bytes,1,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"` // 私有仓库名称（可选）
	Keyword       string                 `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Size          int32                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChartsRequest) Reset() {
	*x = ListChartsRequest{}
	mi := &file_helm_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartsRequest) ProtoMessage() {}

func (x *ListChartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChartsRequest.ProtoReflect.Descriptor instead.
func (*ListChartsRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListChartsRequest) GetRepoName() string {
	if x != nil {
		return x.RepoName
	}
	return ""
}

func (x *ListChartsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListChartsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListChartsRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ChartInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                     // Chart 名称
	ChartVersion  string                 `protobuf:"bytes,2,opt,name=chart_version,json=chartVersion,proto3" json:"chart_version,omitempty"` // Chart 版本
	IconUrl       string                 `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`                // 图标 URL
	AppVersion    string                 `protobuf:"bytes,4,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`       // 应用版本
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                       // 应用描述
	UpdateDate    string                 `protobuf:"bytes,6,opt,name=updateDate,proto3" json:"updateDate,omitempty"`                         // 更新时间
	UpdateUser    string                 `protobuf:"bytes,7,opt,name=updateUser,proto3" json:"updateUser,omitempty"`                         // 更新者
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChartInfo) Reset() {
	*x = ChartInfo{}
	mi := &file_helm_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChartInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartInfo) ProtoMessage() {}

func (x *ChartInfo) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartInfo.ProtoReflect.Descriptor instead.
func (*ChartInfo) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{1}
}

func (x *ChartInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChartInfo) GetChartVersion() string {
	if x != nil {
		return x.ChartVersion
	}
	return ""
}

func (x *ChartInfo) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *ChartInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *ChartInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChartInfo) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

func (x *ChartInfo) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

type ListChartsData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalPage     int32                  `protobuf:"varint,3,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	CurrentPage   int32                  `protobuf:"varint,4,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	Charts        []*ChartInfo           `protobuf:"bytes,5,rep,name=charts,proto3" json:"charts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChartsData) Reset() {
	*x = ListChartsData{}
	mi := &file_helm_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartsData) ProtoMessage() {}

func (x *ListChartsData) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChartsData.ProtoReflect.Descriptor instead.
func (*ListChartsData) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListChartsData) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListChartsData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListChartsData) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *ListChartsData) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *ListChartsData) GetCharts() []*ChartInfo {
	if x != nil {
		return x.Charts
	}
	return nil
}

type ListChartsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Data          *anypb.Any             `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChartsResponse) Reset() {
	*x = ListChartsResponse{}
	mi := &file_helm_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartsResponse) ProtoMessage() {}

func (x *ListChartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChartsResponse.ProtoReflect.Descriptor instead.
func (*ListChartsResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListChartsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListChartsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListChartsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListChartsResponse) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

// 2. 配置私有仓库
type ConfigureRepoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                   // 仓库名称
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                     // 仓库地址
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`           // 用户名（可选）
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`           // 密码（可选）
	CaFile        string                 `protobuf:"bytes,5,opt,name=ca_file,json=caFile,proto3" json:"ca_file,omitempty"` // CA 证书（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureRepoRequest) Reset() {
	*x = ConfigureRepoRequest{}
	mi := &file_helm_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureRepoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureRepoRequest) ProtoMessage() {}

func (x *ConfigureRepoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureRepoRequest.ProtoReflect.Descriptor instead.
func (*ConfigureRepoRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigureRepoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigureRepoRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ConfigureRepoRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ConfigureRepoRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ConfigureRepoRequest) GetCaFile() string {
	if x != nil {
		return x.CaFile
	}
	return ""
}

type ConfigureRepoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureRepoResponse) Reset() {
	*x = ConfigureRepoResponse{}
	mi := &file_helm_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureRepoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureRepoResponse) ProtoMessage() {}

func (x *ConfigureRepoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureRepoResponse.ProtoReflect.Descriptor instead.
func (*ConfigureRepoResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigureRepoResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type K8SObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Object        *anypb.Any             `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"` // 存储任意 Kubernetes 对象
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *K8SObject) Reset() {
	*x = K8SObject{}
	mi := &file_helm_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *K8SObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SObject) ProtoMessage() {}

func (x *K8SObject) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SObject.ProtoReflect.Descriptor instead.
func (*K8SObject) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{6}
}

func (x *K8SObject) GetObject() *anypb.Any {
	if x != nil {
		return x.Object
	}
	return nil
}

type K8SObjectList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*K8SObject           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // 相当于 []runtime.Object
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *K8SObjectList) Reset() {
	*x = K8SObjectList{}
	mi := &file_helm_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *K8SObjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SObjectList) ProtoMessage() {}

func (x *K8SObjectList) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SObjectList.ProtoReflect.Descriptor instead.
func (*K8SObjectList) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{7}
}

func (x *K8SObjectList) GetItems() []*K8SObject {
	if x != nil {
		return x.Items
	}
	return nil
}

// 3. 安装 Chart
type InstallChartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                  // Chart 名称
	ReleaseName   string                 `protobuf:"bytes,2,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"` // 安装的名称
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`                            // Chart 版本
	Namespace     string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`                        // 目标命名空间
	DryRun        bool                   `protobuf:"varint,5,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`               // 检查chart文件是否合法
	Values        string                 `protobuf:"bytes,6,opt,name=values,proto3" json:"values,omitempty"`                              // values.yaml 内容（JSON/YAML 字符串）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallChartRequest) Reset() {
	*x = InstallChartRequest{}
	mi := &file_helm_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallChartRequest) ProtoMessage() {}

func (x *InstallChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallChartRequest.ProtoReflect.Descriptor instead.
func (*InstallChartRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{8}
}

func (x *InstallChartRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstallChartRequest) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *InstallChartRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstallChartRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *InstallChartRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *InstallChartRequest) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

type InstallChartResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Code          int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	ReleaseName   string                    `protobuf:"bytes,2,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"` // 安装名称
	FirstDeployed string                    `protobuf:"bytes,3,opt,name=first_deployed,json=firstDeployed,proto3" json:"first_deployed,omitempty"`
	LastDeployed  string                    `protobuf:"bytes,4,opt,name=last_deployed,json=lastDeployed,proto3" json:"last_deployed,omitempty"`
	Deleted       string                    `protobuf:"bytes,5,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Message       string                    `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Status        string                    `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Entries       map[string]*K8SObjectList `protobuf:"bytes,8,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallChartResponse) Reset() {
	*x = InstallChartResponse{}
	mi := &file_helm_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallChartResponse) ProtoMessage() {}

func (x *InstallChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallChartResponse.ProtoReflect.Descriptor instead.
func (*InstallChartResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{9}
}

func (x *InstallChartResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InstallChartResponse) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *InstallChartResponse) GetFirstDeployed() string {
	if x != nil {
		return x.FirstDeployed
	}
	return ""
}

func (x *InstallChartResponse) GetLastDeployed() string {
	if x != nil {
		return x.LastDeployed
	}
	return ""
}

func (x *InstallChartResponse) GetDeleted() string {
	if x != nil {
		return x.Deleted
	}
	return ""
}

func (x *InstallChartResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InstallChartResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InstallChartResponse) GetEntries() map[string]*K8SObjectList {
	if x != nil {
		return x.Entries
	}
	return nil
}

// 4. 卸载请求参数
type UninstallChartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                       // 命名空间（从 URL 路径获取）
	ReleaseName   string                 `protobuf:"bytes,2,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`                                                // Chart 名称（从 URL 路径获取）
	Purge         bool                   `protobuf:"varint,3,opt,name=purge,proto3" json:"purge,omitempty"`                                                                              // 是否彻底删除（从 Body 或 Query 获取）
	Options       map[string]string      `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 其他卸载选项（如超时时间）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UninstallChartRequest) Reset() {
	*x = UninstallChartRequest{}
	mi := &file_helm_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UninstallChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallChartRequest) ProtoMessage() {}

func (x *UninstallChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallChartRequest.ProtoReflect.Descriptor instead.
func (*UninstallChartRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{10}
}

func (x *UninstallChartRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UninstallChartRequest) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *UninstallChartRequest) GetPurge() bool {
	if x != nil {
		return x.Purge
	}
	return false
}

func (x *UninstallChartRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

// 4. 卸载响应
type UninstallChartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 详细信息（如错误原因）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UninstallChartResponse) Reset() {
	*x = UninstallChartResponse{}
	mi := &file_helm_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UninstallChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallChartResponse) ProtoMessage() {}

func (x *UninstallChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallChartResponse.ProtoReflect.Descriptor instead.
func (*UninstallChartResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{11}
}

func (x *UninstallChartResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UninstallChartResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 5. 监控安装状态
type WatchInstallStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReleaseName   string                 `protobuf:"bytes,1,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"` // 命名空间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchInstallStatusRequest) Reset() {
	*x = WatchInstallStatusRequest{}
	mi := &file_helm_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchInstallStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchInstallStatusRequest) ProtoMessage() {}

func (x *WatchInstallStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchInstallStatusRequest.ProtoReflect.Descriptor instead.
func (*WatchInstallStatusRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{12}
}

func (x *WatchInstallStatusRequest) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *WatchInstallStatusRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type InstallStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Phase         string                 `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty"`     // Installing | Deployed | Failed
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 状态详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallStatus) Reset() {
	*x = InstallStatus{}
	mi := &file_helm_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallStatus) ProtoMessage() {}

func (x *InstallStatus) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallStatus.ProtoReflect.Descriptor instead.
func (*InstallStatus) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{13}
}

func (x *InstallStatus) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *InstallStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 6. 监控 Pod 状态
type ListPodStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`                        // 目标命名空间
	ReleaseName   string                 `protobuf:"bytes,2,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"` // Helm Release 名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPodStatusRequest) Reset() {
	*x = ListPodStatusRequest{}
	mi := &file_helm_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPodStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodStatusRequest) ProtoMessage() {}

func (x *ListPodStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodStatusRequest.ProtoReflect.Descriptor instead.
func (*ListPodStatusRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListPodStatusRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListPodStatusRequest) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

type PodStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`          // Pod 名称
	Phase         string                 `protobuf:"bytes,2,opt,name=phase,proto3" json:"phase,omitempty"`        // 当前阶段（Pending/Running/Succeeded/Failed）
	Ready         string                 `protobuf:"bytes,3,opt,name=ready,proto3" json:"ready,omitempty"`        // 就绪状态（如 "1/2"）
	Restarts      int32                  `protobuf:"varint,4,opt,name=restarts,proto3" json:"restarts,omitempty"` // 容器重启次数
	Ip            string                 `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`              // Pod IP 地址
	Node          string                 `protobuf:"bytes,6,opt,name=node,proto3" json:"node,omitempty"`          // 所在节点名称
	Age           string                 `protobuf:"bytes,7,opt,name=age,proto3" json:"age,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Pod 标签
	Containers    []*ContainerStatus     `protobuf:"bytes,9,rep,name=containers,proto3" json:"containers,omitempty"`                                                                   // 容器状态详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PodStatus) Reset() {
	*x = PodStatus{}
	mi := &file_helm_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PodStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodStatus) ProtoMessage() {}

func (x *PodStatus) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodStatus.ProtoReflect.Descriptor instead.
func (*PodStatus) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{15}
}

func (x *PodStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PodStatus) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *PodStatus) GetReady() string {
	if x != nil {
		return x.Ready
	}
	return ""
}

func (x *PodStatus) GetRestarts() int32 {
	if x != nil {
		return x.Restarts
	}
	return 0
}

func (x *PodStatus) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *PodStatus) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *PodStatus) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *PodStatus) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *PodStatus) GetContainers() []*ContainerStatus {
	if x != nil {
		return x.Containers
	}
	return nil
}

type ContainerStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ready         bool                   `protobuf:"varint,2,opt,name=ready,proto3" json:"ready,omitempty"`
	RestartCount  int32                  `protobuf:"varint,3,opt,name=restart_count,json=restartCount,proto3" json:"restart_count,omitempty"`
	State         string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"` // waiting/running/terminated
	Image         string                 `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStatus) Reset() {
	*x = ContainerStatus{}
	mi := &file_helm_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStatus) ProtoMessage() {}

func (x *ContainerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStatus.ProtoReflect.Descriptor instead.
func (*ContainerStatus) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{16}
}

func (x *ContainerStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerStatus) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *ContainerStatus) GetRestartCount() int32 {
	if x != nil {
		return x.RestartCount
	}
	return 0
}

func (x *ContainerStatus) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ContainerStatus) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type PodsStatusList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pods          []*PodStatus           `protobuf:"bytes,1,rep,name=pods,proto3" json:"pods,omitempty"` // Pod 状态数组
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PodsStatusList) Reset() {
	*x = PodsStatusList{}
	mi := &file_helm_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PodsStatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodsStatusList) ProtoMessage() {}

func (x *PodsStatusList) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodsStatusList.ProtoReflect.Descriptor instead.
func (*PodsStatusList) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{17}
}

func (x *PodsStatusList) GetPods() []*PodStatus {
	if x != nil {
		return x.Pods
	}
	return nil
}

type ListPodStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Data          *PodsStatusList        `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPodStatusResponse) Reset() {
	*x = ListPodStatusResponse{}
	mi := &file_helm_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPodStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodStatusResponse) ProtoMessage() {}

func (x *ListPodStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodStatusResponse.ProtoReflect.Descriptor instead.
func (*ListPodStatusResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListPodStatusResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListPodStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListPodStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListPodStatusResponse) GetData() *PodsStatusList {
	if x != nil {
		return x.Data
	}
	return nil
}

// 7. 检查 ApisixRoute
type CheckApisixRouteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReleaseName   string                 `protobuf:"bytes,1,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"` // 命名空间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckApisixRouteRequest) Reset() {
	*x = CheckApisixRouteRequest{}
	mi := &file_helm_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckApisixRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckApisixRouteRequest) ProtoMessage() {}

func (x *CheckApisixRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckApisixRouteRequest.ProtoReflect.Descriptor instead.
func (*CheckApisixRouteRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{19}
}

func (x *CheckApisixRouteRequest) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *CheckApisixRouteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type CheckApisixRouteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exists        bool                   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	RouteUrl      string                 `protobuf:"bytes,2,opt,name=route_url,json=routeUrl,proto3" json:"route_url,omitempty"` // 访问方式（如 http://apisix-gateway/route）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckApisixRouteResponse) Reset() {
	*x = CheckApisixRouteResponse{}
	mi := &file_helm_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckApisixRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckApisixRouteResponse) ProtoMessage() {}

func (x *CheckApisixRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckApisixRouteResponse.ProtoReflect.Descriptor instead.
func (*CheckApisixRouteResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{20}
}

func (x *CheckApisixRouteResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *CheckApisixRouteResponse) GetRouteUrl() string {
	if x != nil {
		return x.RouteUrl
	}
	return ""
}

// 8. 创建 Chart 应用
type CreateChartApplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ChartRef      string                 `protobuf:"bytes,3,opt,name=chart_ref,json=chartRef,proto3" json:"chart_ref,omitempty"` // Chart 引用（如 repo/chart）
	Values        string                 `protobuf:"bytes,4,opt,name=values,proto3" json:"values,omitempty"`                     // values.yaml 内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChartApplicationRequest) Reset() {
	*x = CreateChartApplicationRequest{}
	mi := &file_helm_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChartApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChartApplicationRequest) ProtoMessage() {}

func (x *CreateChartApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChartApplicationRequest.ProtoReflect.Descriptor instead.
func (*CreateChartApplicationRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{21}
}

func (x *CreateChartApplicationRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateChartApplicationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateChartApplicationRequest) GetChartRef() string {
	if x != nil {
		return x.ChartRef
	}
	return ""
}

func (x *CreateChartApplicationRequest) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

type CreateChartApplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChartApplicationResponse) Reset() {
	*x = CreateChartApplicationResponse{}
	mi := &file_helm_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChartApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChartApplicationResponse) ProtoMessage() {}

func (x *CreateChartApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChartApplicationResponse.ProtoReflect.Descriptor instead.
func (*CreateChartApplicationResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{22}
}

func (x *CreateChartApplicationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 9. 获取 Pod 日志
type GetPodLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName       string                 `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	TailLines     int32                  `protobuf:"varint,3,opt,name=tail_lines,json=tailLines,proto3" json:"tail_lines,omitempty"` // 日志行数（可选）
	Follow        bool                   `protobuf:"varint,4,opt,name=follow,proto3" json:"follow,omitempty"`                        // 是否实时流式传输（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPodLogsRequest) Reset() {
	*x = GetPodLogsRequest{}
	mi := &file_helm_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPodLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPodLogsRequest) ProtoMessage() {}

func (x *GetPodLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPodLogsRequest.ProtoReflect.Descriptor instead.
func (*GetPodLogsRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetPodLogsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetPodLogsRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *GetPodLogsRequest) GetTailLines() int32 {
	if x != nil {
		return x.TailLines
	}
	return 0
}

func (x *GetPodLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

type LogChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"` // 日志内容（二进制流）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogChunk) Reset() {
	*x = LogChunk{}
	mi := &file_helm_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogChunk) ProtoMessage() {}

func (x *LogChunk) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogChunk.ProtoReflect.Descriptor instead.
func (*LogChunk) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{24}
}

func (x *LogChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// 10. 检查 Pod 终端
type CheckPodTerminalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName       string                 `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	Container     string                 `protobuf:"bytes,3,opt,name=container,proto3" json:"container,omitempty"` // 容器名称（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPodTerminalRequest) Reset() {
	*x = CheckPodTerminalRequest{}
	mi := &file_helm_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPodTerminalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPodTerminalRequest) ProtoMessage() {}

func (x *CheckPodTerminalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPodTerminalRequest.ProtoReflect.Descriptor instead.
func (*CheckPodTerminalRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{25}
}

func (x *CheckPodTerminalRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CheckPodTerminalRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *CheckPodTerminalRequest) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

type CheckPodTerminalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Supported     bool                   `protobuf:"varint,1,opt,name=supported,proto3" json:"supported,omitempty"`                          // 是否支持终端
	WebsocketUrl  string                 `protobuf:"bytes,2,opt,name=websocket_url,json=websocketUrl,proto3" json:"websocket_url,omitempty"` // WebSocket 连接地址（如 ws://service/terminal）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPodTerminalResponse) Reset() {
	*x = CheckPodTerminalResponse{}
	mi := &file_helm_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPodTerminalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPodTerminalResponse) ProtoMessage() {}

func (x *CheckPodTerminalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPodTerminalResponse.ProtoReflect.Descriptor instead.
func (*CheckPodTerminalResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{26}
}

func (x *CheckPodTerminalResponse) GetSupported() bool {
	if x != nil {
		return x.Supported
	}
	return false
}

func (x *CheckPodTerminalResponse) GetWebsocketUrl() string {
	if x != nil {
		return x.WebsocketUrl
	}
	return ""
}

// ========== 通用消息定义 ==========
type ChartSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChartName     string                 `protobuf:"bytes,1,opt,name=chart_name,json=chartName,proto3" json:"chart_name,omitempty"`                                                    // Chart 名称（如 "nginx"）
	ChartVersion  string                 `protobuf:"bytes,2,opt,name=chart_version,json=chartVersion,proto3" json:"chart_version,omitempty"`                                           // Chart 版本（如 "1.2.3"）
	RepoUrl       string                 `protobuf:"bytes,3,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`                                                          // 仓库地址（可选）
	Values        map[string]string      `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 自定义 Values
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChartSpec) Reset() {
	*x = ChartSpec{}
	mi := &file_helm_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChartSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartSpec) ProtoMessage() {}

func (x *ChartSpec) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartSpec.ProtoReflect.Descriptor instead.
func (*ChartSpec) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{27}
}

func (x *ChartSpec) GetChartName() string {
	if x != nil {
		return x.ChartName
	}
	return ""
}

func (x *ChartSpec) GetChartVersion() string {
	if x != nil {
		return x.ChartVersion
	}
	return ""
}

func (x *ChartSpec) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *ChartSpec) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

// ========== 升级请求/响应 ==========
type UpgradeChartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ReleaseName   string                 `protobuf:"bytes,2,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	Chart         *ChartSpec             `protobuf:"bytes,3,opt,name=chart,proto3" json:"chart,omitempty"`
	Force         bool                   `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`                                   // 是否强制升级（--force）
	RecreatePods  bool                   `protobuf:"varint,5,opt,name=recreate_pods,json=recreatePods,proto3" json:"recreate_pods,omitempty"` // 是否重启 Pod（--recreate-pods）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeChartRequest) Reset() {
	*x = UpgradeChartRequest{}
	mi := &file_helm_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeChartRequest) ProtoMessage() {}

func (x *UpgradeChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeChartRequest.ProtoReflect.Descriptor instead.
func (*UpgradeChartRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{28}
}

func (x *UpgradeChartRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpgradeChartRequest) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *UpgradeChartRequest) GetChart() *ChartSpec {
	if x != nil {
		return x.Chart
	}
	return nil
}

func (x *UpgradeChartRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *UpgradeChartRequest) GetRecreatePods() bool {
	if x != nil {
		return x.RecreatePods
	}
	return false
}

type UpgradeChartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Revision      string                 `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"` // 新版本号（如 "2"）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeChartResponse) Reset() {
	*x = UpgradeChartResponse{}
	mi := &file_helm_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeChartResponse) ProtoMessage() {}

func (x *UpgradeChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeChartResponse.ProtoReflect.Descriptor instead.
func (*UpgradeChartResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{29}
}

func (x *UpgradeChartResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpgradeChartResponse) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

// ========== 回滚请求/响应 ==========
type RollbackChartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ReleaseName   string                 `protobuf:"bytes,2,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	Revision      string                 `protobuf:"bytes,3,opt,name=revision,proto3" json:"revision,omitempty"` // 目标回滚版本号（如 "1"）
	Wait          bool                   `protobuf:"varint,4,opt,name=wait,proto3" json:"wait,omitempty"`        // 是否等待回滚完成（--wait）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackChartRequest) Reset() {
	*x = RollbackChartRequest{}
	mi := &file_helm_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackChartRequest) ProtoMessage() {}

func (x *RollbackChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackChartRequest.ProtoReflect.Descriptor instead.
func (*RollbackChartRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{30}
}

func (x *RollbackChartRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RollbackChartRequest) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *RollbackChartRequest) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *RollbackChartRequest) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

type RollbackChartResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Status          string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	CurrentRevision string                 `protobuf:"bytes,2,opt,name=current_revision,json=currentRevision,proto3" json:"current_revision,omitempty"` // 回滚后的版本号
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RollbackChartResponse) Reset() {
	*x = RollbackChartResponse{}
	mi := &file_helm_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackChartResponse) ProtoMessage() {}

func (x *RollbackChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackChartResponse.ProtoReflect.Descriptor instead.
func (*RollbackChartResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{31}
}

func (x *RollbackChartResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RollbackChartResponse) GetCurrentRevision() string {
	if x != nil {
		return x.CurrentRevision
	}
	return ""
}

// ========== 请求/响应定义 ==========
type ListChartVersionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepoName      string                 `protobuf:"bytes,1,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"`           // 仓库名称（如 "stable"）
	ChartName     string                 `protobuf:"bytes,2,opt,name=chart_name,json=chartName,proto3" json:"chart_name,omitempty"`        // Chart 名称（如 "nginx"）
	WithDetails   bool                   `protobuf:"varint,3,opt,name=with_details,json=withDetails,proto3" json:"with_details,omitempty"` // 是否返回详细元数据（如更新时间）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChartVersionsRequest) Reset() {
	*x = ListChartVersionsRequest{}
	mi := &file_helm_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartVersionsRequest) ProtoMessage() {}

func (x *ListChartVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChartVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListChartVersionsRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{32}
}

func (x *ListChartVersionsRequest) GetRepoName() string {
	if x != nil {
		return x.RepoName
	}
	return ""
}

func (x *ListChartVersionsRequest) GetChartName() string {
	if x != nil {
		return x.ChartName
	}
	return ""
}

func (x *ListChartVersionsRequest) GetWithDetails() bool {
	if x != nil {
		return x.WithDetails
	}
	return false
}

type ChartVersionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                         // 版本号（如 "1.2.3"）
	AppVersion    string                 `protobuf:"bytes,2,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"` // 应用版本（如 "1.20.0"）
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                 // 版本描述
	Created       string                 `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`                         // 创建时间（RFC3339 格式）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChartVersionInfo) Reset() {
	*x = ChartVersionInfo{}
	mi := &file_helm_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChartVersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartVersionInfo) ProtoMessage() {}

func (x *ChartVersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartVersionInfo.ProtoReflect.Descriptor instead.
func (*ChartVersionInfo) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{33}
}

func (x *ChartVersionInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ChartVersionInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *ChartVersionInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChartVersionInfo) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

type ListChartVersionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Versions      []*ChartVersionInfo    `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	RepoUrl       string                 `protobuf:"bytes,2,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"` // 仓库地址（如 "https://charts.helm.sh/stable"）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChartVersionsResponse) Reset() {
	*x = ListChartVersionsResponse{}
	mi := &file_helm_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChartVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChartVersionsResponse) ProtoMessage() {}

func (x *ListChartVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChartVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListChartVersionsResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{34}
}

func (x *ListChartVersionsResponse) GetVersions() []*ChartVersionInfo {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *ListChartVersionsResponse) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

type ListInstalledChartsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"` // 目标命名空间（空表示所有命名空间）
	ReleaseName   string                 `protobuf:"bytes,2,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	WithStatus    bool                   `protobuf:"varint,3,opt,name=with_status,json=withStatus,proto3" json:"with_status,omitempty"`       // 是否包含状态信息
	WithManifest  bool                   `protobuf:"varint,4,opt,name=with_manifest,json=withManifest,proto3" json:"with_manifest,omitempty"` // 是否包含资源清单
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListInstalledChartsRequest) Reset() {
	*x = ListInstalledChartsRequest{}
	mi := &file_helm_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstalledChartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstalledChartsRequest) ProtoMessage() {}

func (x *ListInstalledChartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstalledChartsRequest.ProtoReflect.Descriptor instead.
func (*ListInstalledChartsRequest) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{35}
}

func (x *ListInstalledChartsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListInstalledChartsRequest) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *ListInstalledChartsRequest) GetWithStatus() bool {
	if x != nil {
		return x.WithStatus
	}
	return false
}

func (x *ListInstalledChartsRequest) GetWithManifest() bool {
	if x != nil {
		return x.WithManifest
	}
	return false
}

type ListInstalledChartsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Data          []*anypb.Any           `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListInstalledChartsResponse) Reset() {
	*x = ListInstalledChartsResponse{}
	mi := &file_helm_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstalledChartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstalledChartsResponse) ProtoMessage() {}

func (x *ListInstalledChartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstalledChartsResponse.ProtoReflect.Descriptor instead.
func (*ListInstalledChartsResponse) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{36}
}

func (x *ListInstalledChartsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListInstalledChartsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListInstalledChartsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListInstalledChartsResponse) GetData() []*anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type InstalledChart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                     // Release 名称
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`                           // 所属命名空间
	ChartName     string                 `protobuf:"bytes,3,opt,name=chart_name,json=chartName,proto3" json:"chart_name,omitempty"`          // Chart 名称（如 nginx）
	ChartVersion  string                 `protobuf:"bytes,4,opt,name=chart_version,json=chartVersion,proto3" json:"chart_version,omitempty"` // Chart 版本（如 1.2.3）
	AppVersion    string                 `protobuf:"bytes,5,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`       // 应用版本
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                                 // 状态（DEPLOYED/FAILED/PENDING）
	Manifest      string                 `protobuf:"bytes,7,opt,name=manifest,proto3" json:"manifest,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated,proto3" json:"updated,omitempty"`                                                                         // 最后更新时间
	Values        map[string]string      `protobuf:"bytes,9,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 用户自定义 values
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstalledChart) Reset() {
	*x = InstalledChart{}
	mi := &file_helm_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstalledChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstalledChart) ProtoMessage() {}

func (x *InstalledChart) ProtoReflect() protoreflect.Message {
	mi := &file_helm_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstalledChart.ProtoReflect.Descriptor instead.
func (*InstalledChart) Descriptor() ([]byte, []int) {
	return file_helm_service_proto_rawDescGZIP(), []int{37}
}

func (x *InstalledChart) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstalledChart) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *InstalledChart) GetChartName() string {
	if x != nil {
		return x.ChartName
	}
	return ""
}

func (x *InstalledChart) GetChartVersion() string {
	if x != nil {
		return x.ChartVersion
	}
	return ""
}

func (x *InstalledChart) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *InstalledChart) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InstalledChart) GetManifest() string {
	if x != nil {
		return x.Manifest
	}
	return ""
}

func (x *InstalledChart) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *InstalledChart) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_helm_service_proto protoreflect.FileDescriptor

const file_helm_service_proto_rawDesc = "" +
	"\n" +
	"\x12helm_service.proto\x12\rhelm.v1alpha1\x1a\x1cgoogle/api/annotations.proto\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"t\n" +
	"\x11ListChartsRequest\x12\x1b\n" +
	"\trepo_name\x18\x01 \x01(\tR\brepoName\x12\x18\n" +
	"\akeyword\x18\x02 \x01(\tR\akeyword\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x05R\x04size\"\xe2\x01\n" +
	"\tChartInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rchart_version\x18\x02 \x01(\tR\fchartVersion\x12\x19\n" +
	"\bicon_url\x18\x03 \x01(\tR\aiconUrl\x12\x1f\n" +
	"\vapp_version\x18\x04 \x01(\tR\n" +
	"appVersion\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"updateDate\x18\x06 \x01(\tR\n" +
	"updateDate\x12\x1e\n" +
	"\n" +
	"updateUser\x18\a \x01(\tR\n" +
	"updateUser\"\xb7\x01\n" +
	"\x0eListChartsData\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"total_page\x18\x03 \x01(\x05R\ttotalPage\x12!\n" +
	"\fcurrent_page\x18\x04 \x01(\x05R\vcurrentPage\x120\n" +
	"\x06charts\x18\x05 \x03(\v2\x18.helm.v1alpha1.ChartInfoR\x06charts\"\x86\x01\n" +
	"\x12ListChartsResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12(\n" +
	"\x04data\x18\x04 \x01(\v2\x14.google.protobuf.AnyR\x04data\"\x8d\x01\n" +
	"\x14ConfigureRepoRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x17\n" +
	"\aca_file\x18\x05 \x01(\tR\x06caFile\"1\n" +
	"\x15ConfigureRepoResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"9\n" +
	"\tK8sObject\x12,\n" +
	"\x06object\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x06object\"?\n" +
	"\rK8sObjectList\x12.\n" +
	"\x05items\x18\x01 \x03(\v2\x18.helm.v1alpha1.K8sObjectR\x05items\"\xb5\x01\n" +
	"\x13InstallChartRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\frelease_name\x18\x02 \x01(\tR\vreleaseName\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12\x17\n" +
	"\adry_run\x18\x05 \x01(\bR\x06dryRun\x12\x16\n" +
	"\x06values\x18\x06 \x01(\tR\x06values\"\x8b\x03\n" +
	"\x14InstallChartResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12!\n" +
	"\frelease_name\x18\x02 \x01(\tR\vreleaseName\x12%\n" +
	"\x0efirst_deployed\x18\x03 \x01(\tR\rfirstDeployed\x12#\n" +
	"\rlast_deployed\x18\x04 \x01(\tR\flastDeployed\x12\x18\n" +
	"\adeleted\x18\x05 \x01(\tR\adeleted\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessage\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x12J\n" +
	"\aentries\x18\b \x03(\v20.helm.v1alpha1.InstallChartResponse.EntriesEntryR\aentries\x1aX\n" +
	"\fEntriesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.helm.v1alpha1.K8sObjectListR\x05value:\x028\x01\"\xf7\x01\n" +
	"\x15UninstallChartRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12!\n" +
	"\frelease_name\x18\x02 \x01(\tR\vreleaseName\x12\x14\n" +
	"\x05purge\x18\x03 \x01(\bR\x05purge\x12K\n" +
	"\aoptions\x18\x04 \x03(\v21.helm.v1alpha1.UninstallChartRequest.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"F\n" +
	"\x16UninstallChartResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\\\n" +
	"\x19WatchInstallStatusRequest\x12!\n" +
	"\frelease_name\x18\x01 \x01(\tR\vreleaseName\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"?\n" +
	"\rInstallStatus\x12\x14\n" +
	"\x05phase\x18\x01 \x01(\tR\x05phase\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"W\n" +
	"\x14ListPodStatusRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12!\n" +
	"\frelease_name\x18\x02 \x01(\tR\vreleaseName\"\xd6\x02\n" +
	"\tPodStatus\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05phase\x18\x02 \x01(\tR\x05phase\x12\x14\n" +
	"\x05ready\x18\x03 \x01(\tR\x05ready\x12\x1a\n" +
	"\brestarts\x18\x04 \x01(\x05R\brestarts\x12\x0e\n" +
	"\x02ip\x18\x05 \x01(\tR\x02ip\x12\x12\n" +
	"\x04node\x18\x06 \x01(\tR\x04node\x12\x10\n" +
	"\x03age\x18\a \x01(\tR\x03age\x12<\n" +
	"\x06labels\x18\b \x03(\v2$.helm.v1alpha1.PodStatus.LabelsEntryR\x06labels\x12>\n" +
	"\n" +
	"containers\x18\t \x03(\v2\x1e.helm.v1alpha1.ContainerStatusR\n" +
	"containers\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8c\x01\n" +
	"\x0fContainerStatus\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05ready\x18\x02 \x01(\bR\x05ready\x12#\n" +
	"\rrestart_count\x18\x03 \x01(\x05R\frestartCount\x12\x14\n" +
	"\x05state\x18\x04 \x01(\tR\x05state\x12\x14\n" +
	"\x05image\x18\x05 \x01(\tR\x05image\">\n" +
	"\x0ePodsStatusList\x12,\n" +
	"\x04pods\x18\x01 \x03(\v2\x18.helm.v1alpha1.PodStatusR\x04pods\"\x92\x01\n" +
	"\x15ListPodStatusResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x121\n" +
	"\x04data\x18\x04 \x01(\v2\x1d.helm.v1alpha1.PodsStatusListR\x04data\"Z\n" +
	"\x17CheckApisixRouteRequest\x12!\n" +
	"\frelease_name\x18\x01 \x01(\tR\vreleaseName\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"O\n" +
	"\x18CheckApisixRouteResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\x12\x1b\n" +
	"\troute_url\x18\x02 \x01(\tR\brouteUrl\"\x86\x01\n" +
	"\x1dCreateChartApplicationRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\tchart_ref\x18\x03 \x01(\tR\bchartRef\x12\x16\n" +
	"\x06values\x18\x04 \x01(\tR\x06values\":\n" +
	"\x1eCreateChartApplicationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x83\x01\n" +
	"\x11GetPodLogsRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x19\n" +
	"\bpod_name\x18\x02 \x01(\tR\apodName\x12\x1d\n" +
	"\n" +
	"tail_lines\x18\x03 \x01(\x05R\ttailLines\x12\x16\n" +
	"\x06follow\x18\x04 \x01(\bR\x06follow\"$\n" +
	"\bLogChunk\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\"p\n" +
	"\x17CheckPodTerminalRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x19\n" +
	"\bpod_name\x18\x02 \x01(\tR\apodName\x12\x1c\n" +
	"\tcontainer\x18\x03 \x01(\tR\tcontainer\"]\n" +
	"\x18CheckPodTerminalResponse\x12\x1c\n" +
	"\tsupported\x18\x01 \x01(\bR\tsupported\x12#\n" +
	"\rwebsocket_url\x18\x02 \x01(\tR\fwebsocketUrl\"\xe3\x01\n" +
	"\tChartSpec\x12\x1d\n" +
	"\n" +
	"chart_name\x18\x01 \x01(\tR\tchartName\x12#\n" +
	"\rchart_version\x18\x02 \x01(\tR\fchartVersion\x12\x19\n" +
	"\brepo_url\x18\x03 \x01(\tR\arepoUrl\x12<\n" +
	"\x06values\x18\x04 \x03(\v2$.helm.v1alpha1.ChartSpec.ValuesEntryR\x06values\x1a9\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc1\x01\n" +
	"\x13UpgradeChartRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12!\n" +
	"\frelease_name\x18\x02 \x01(\tR\vreleaseName\x12.\n" +
	"\x05chart\x18\x03 \x01(\v2\x18.helm.v1alpha1.ChartSpecR\x05chart\x12\x14\n" +
	"\x05force\x18\x04 \x01(\bR\x05force\x12#\n" +
	"\rrecreate_pods\x18\x05 \x01(\bR\frecreatePods\"J\n" +
	"\x14UpgradeChartResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1a\n" +
	"\brevision\x18\x02 \x01(\tR\brevision\"\x87\x01\n" +
	"\x14RollbackChartRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12!\n" +
	"\frelease_name\x18\x02 \x01(\tR\vreleaseName\x12\x1a\n" +
	"\brevision\x18\x03 \x01(\tR\brevision\x12\x12\n" +
	"\x04wait\x18\x04 \x01(\bR\x04wait\"Z\n" +
	"\x15RollbackChartResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12)\n" +
	"\x10current_revision\x18\x02 \x01(\tR\x0fcurrentRevision\"y\n" +
	"\x18ListChartVersionsRequest\x12\x1b\n" +
	"\trepo_name\x18\x01 \x01(\tR\brepoName\x12\x1d\n" +
	"\n" +
	"chart_name\x18\x02 \x01(\tR\tchartName\x12!\n" +
	"\fwith_details\x18\x03 \x01(\bR\vwithDetails\"\x89\x01\n" +
	"\x10ChartVersionInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x1f\n" +
	"\vapp_version\x18\x02 \x01(\tR\n" +
	"appVersion\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\acreated\x18\x04 \x01(\tR\acreated\"s\n" +
	"\x19ListChartVersionsResponse\x12;\n" +
	"\bversions\x18\x01 \x03(\v2\x1f.helm.v1alpha1.ChartVersionInfoR\bversions\x12\x19\n" +
	"\brepo_url\x18\x02 \x01(\tR\arepoUrl\"\xa3\x01\n" +
	"\x1aListInstalledChartsRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12!\n" +
	"\frelease_name\x18\x02 \x01(\tR\vreleaseName\x12\x1f\n" +
	"\vwith_status\x18\x03 \x01(\bR\n" +
	"withStatus\x12#\n" +
	"\rwith_manifest\x18\x04 \x01(\bR\fwithManifest\"\x8f\x01\n" +
	"\x1bListInstalledChartsResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12(\n" +
	"\x04data\x18\x04 \x03(\v2\x14.google.protobuf.AnyR\x04data\"\x8f\x03\n" +
	"\x0eInstalledChart\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1d\n" +
	"\n" +
	"chart_name\x18\x03 \x01(\tR\tchartName\x12#\n" +
	"\rchart_version\x18\x04 \x01(\tR\fchartVersion\x12\x1f\n" +
	"\vapp_version\x18\x05 \x01(\tR\n" +
	"appVersion\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x1a\n" +
	"\bmanifest\x18\a \x01(\tR\bmanifest\x124\n" +
	"\aupdated\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x12A\n" +
	"\x06values\x18\t \x03(\v2).helm.v1alpha1.InstalledChart.ValuesEntryR\x06values\x1a9\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xa9\x10\n" +
	"\x12HelmManagerService\x12k\n" +
	"\n" +
	"ListCharts\x12 .helm.v1alpha1.ListChartsRequest\x1a!.helm.v1alpha1.ListChartsResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1alpha1/charts\x12v\n" +
	"\rConfigureRepo\x12#.helm.v1alpha1.ConfigureRepoRequest\x1a$.helm.v1alpha1.ConfigureRepoResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1alpha1/repos\x12\x97\x01\n" +
	"\fInstallChart\x12\".helm.v1alpha1.InstallChartRequest\x1a#.helm.v1alpha1.InstallChartResponse\">\x82\xd3\xe4\x93\x028:\x01*\"3/v1alpha1/{namespace}/charts/{release_name}/install\x12\x9f\x01\n" +
	"\x0eUninstallChart\x12$.helm.v1alpha1.UninstallChartRequest\x1a%.helm.v1alpha1.UninstallChartResponse\"@\x82\xd3\xe4\x93\x02::\x01*\"5/v1alpha1/{namespace}/charts/{release_name}/uninstall\x12\x9a\x01\n" +
	"\x12WatchInstallStatus\x12(.helm.v1alpha1.WatchInstallStatusRequest\x1a\x1c.helm.v1alpha1.InstallStatus\":\x82\xd3\xe4\x93\x024\x122/v1alpha1/{namespace}/charts/{release_name}/status0\x01\x12\x94\x01\n" +
	"\rListPodStatus\x12#.helm.v1alpha1.ListPodStatusRequest\x1a$.helm.v1alpha1.ListPodStatusResponse\"8\x82\xd3\xe4\x93\x022\x120/v1alpha1/{namespace}/charts/{release_name}/pods\x12\x93\x01\n" +
	"\x10CheckApisixRoute\x12&.helm.v1alpha1.CheckApisixRouteRequest\x1a'.helm.v1alpha1.CheckApisixRouteResponse\".\x82\xd3\xe4\x93\x02(\x12&/v1alpha1/charts/{release_name}/apisix\x12\x98\x01\n" +
	"\x16CreateChartApplication\x12,.helm.v1alpha1.CreateChartApplicationRequest\x1a-.helm.v1alpha1.CreateChartApplicationResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1alpha1/applications\x12}\n" +
	"\n" +
	"GetPodLogs\x12 .helm.v1alpha1.GetPodLogsRequest\x1a\x17.helm.v1alpha1.LogChunk\"2\x82\xd3\xe4\x93\x02,\x12*/v1alpha1/pods/{namespace}/{pod_name}/logs0\x01\x12\x9b\x01\n" +
	"\x10CheckPodTerminal\x12&.helm.v1alpha1.CheckPodTerminalRequest\x1a'.helm.v1alpha1.CheckPodTerminalResponse\"6\x82\xd3\xe4\x93\x020\x12./v1alpha1/pods/{namespace}/{pod_name}/terminal\x12\x97\x01\n" +
	"\fUpgradeChart\x12\".helm.v1alpha1.UpgradeChartRequest\x1a#.helm.v1alpha1.UpgradeChartResponse\">\x82\xd3\xe4\x93\x028:\x01*\"3/v1alpha1/{namespace}/charts/{release_name}/upgrade\x12\x9b\x01\n" +
	"\rRollbackChart\x12#.helm.v1alpha1.RollbackChartRequest\x1a$.helm.v1alpha1.RollbackChartResponse\"?\x82\xd3\xe4\x93\x029:\x01*\"4/v1alpha1/{namespace}/charts/{release_name}/rollback\x12\xa2\x01\n" +
	"\x11ListChartVersions\x12'.helm.v1alpha1.ListChartVersionsRequest\x1a(.helm.v1alpha1.ListChartVersionsResponse\":\x82\xd3\xe4\x93\x024\x122/v1alpha1/charts/{repo_name}/{chart_name}/versions\x12\x92\x01\n" +
	"\x13ListInstalledCharts\x12).helm.v1alpha1.ListInstalledChartsRequest\x1a*.helm.v1alpha1.ListInstalledChartsResponse\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v1alpha1/{namespace}/chartsB\x0eZ\f./pkg/pb/;pbb\x06proto3"

var (
	file_helm_service_proto_rawDescOnce sync.Once
	file_helm_service_proto_rawDescData []byte
)

func file_helm_service_proto_rawDescGZIP() []byte {
	file_helm_service_proto_rawDescOnce.Do(func() {
		file_helm_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_helm_service_proto_rawDesc), len(file_helm_service_proto_rawDesc)))
	})
	return file_helm_service_proto_rawDescData
}

var file_helm_service_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_helm_service_proto_goTypes = []any{
	(*ListChartsRequest)(nil),              // 0: helm.v1alpha1.ListChartsRequest
	(*ChartInfo)(nil),                      // 1: helm.v1alpha1.ChartInfo
	(*ListChartsData)(nil),                 // 2: helm.v1alpha1.ListChartsData
	(*ListChartsResponse)(nil),             // 3: helm.v1alpha1.ListChartsResponse
	(*ConfigureRepoRequest)(nil),           // 4: helm.v1alpha1.ConfigureRepoRequest
	(*ConfigureRepoResponse)(nil),          // 5: helm.v1alpha1.ConfigureRepoResponse
	(*K8SObject)(nil),                      // 6: helm.v1alpha1.K8sObject
	(*K8SObjectList)(nil),                  // 7: helm.v1alpha1.K8sObjectList
	(*InstallChartRequest)(nil),            // 8: helm.v1alpha1.InstallChartRequest
	(*InstallChartResponse)(nil),           // 9: helm.v1alpha1.InstallChartResponse
	(*UninstallChartRequest)(nil),          // 10: helm.v1alpha1.UninstallChartRequest
	(*UninstallChartResponse)(nil),         // 11: helm.v1alpha1.UninstallChartResponse
	(*WatchInstallStatusRequest)(nil),      // 12: helm.v1alpha1.WatchInstallStatusRequest
	(*InstallStatus)(nil),                  // 13: helm.v1alpha1.InstallStatus
	(*ListPodStatusRequest)(nil),           // 14: helm.v1alpha1.ListPodStatusRequest
	(*PodStatus)(nil),                      // 15: helm.v1alpha1.PodStatus
	(*ContainerStatus)(nil),                // 16: helm.v1alpha1.ContainerStatus
	(*PodsStatusList)(nil),                 // 17: helm.v1alpha1.PodsStatusList
	(*ListPodStatusResponse)(nil),          // 18: helm.v1alpha1.ListPodStatusResponse
	(*CheckApisixRouteRequest)(nil),        // 19: helm.v1alpha1.CheckApisixRouteRequest
	(*CheckApisixRouteResponse)(nil),       // 20: helm.v1alpha1.CheckApisixRouteResponse
	(*CreateChartApplicationRequest)(nil),  // 21: helm.v1alpha1.CreateChartApplicationRequest
	(*CreateChartApplicationResponse)(nil), // 22: helm.v1alpha1.CreateChartApplicationResponse
	(*GetPodLogsRequest)(nil),              // 23: helm.v1alpha1.GetPodLogsRequest
	(*LogChunk)(nil),                       // 24: helm.v1alpha1.LogChunk
	(*CheckPodTerminalRequest)(nil),        // 25: helm.v1alpha1.CheckPodTerminalRequest
	(*CheckPodTerminalResponse)(nil),       // 26: helm.v1alpha1.CheckPodTerminalResponse
	(*ChartSpec)(nil),                      // 27: helm.v1alpha1.ChartSpec
	(*UpgradeChartRequest)(nil),            // 28: helm.v1alpha1.UpgradeChartRequest
	(*UpgradeChartResponse)(nil),           // 29: helm.v1alpha1.UpgradeChartResponse
	(*RollbackChartRequest)(nil),           // 30: helm.v1alpha1.RollbackChartRequest
	(*RollbackChartResponse)(nil),          // 31: helm.v1alpha1.RollbackChartResponse
	(*ListChartVersionsRequest)(nil),       // 32: helm.v1alpha1.ListChartVersionsRequest
	(*ChartVersionInfo)(nil),               // 33: helm.v1alpha1.ChartVersionInfo
	(*ListChartVersionsResponse)(nil),      // 34: helm.v1alpha1.ListChartVersionsResponse
	(*ListInstalledChartsRequest)(nil),     // 35: helm.v1alpha1.ListInstalledChartsRequest
	(*ListInstalledChartsResponse)(nil),    // 36: helm.v1alpha1.ListInstalledChartsResponse
	(*InstalledChart)(nil),                 // 37: helm.v1alpha1.InstalledChart
	nil,                                    // 38: helm.v1alpha1.InstallChartResponse.EntriesEntry
	nil,                                    // 39: helm.v1alpha1.UninstallChartRequest.OptionsEntry
	nil,                                    // 40: helm.v1alpha1.PodStatus.LabelsEntry
	nil,                                    // 41: helm.v1alpha1.ChartSpec.ValuesEntry
	nil,                                    // 42: helm.v1alpha1.InstalledChart.ValuesEntry
	(*anypb.Any)(nil),                      // 43: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),          // 44: google.protobuf.Timestamp
}
var file_helm_service_proto_depIdxs = []int32{
	1,  // 0: helm.v1alpha1.ListChartsData.charts:type_name -> helm.v1alpha1.ChartInfo
	43, // 1: helm.v1alpha1.ListChartsResponse.data:type_name -> google.protobuf.Any
	43, // 2: helm.v1alpha1.K8sObject.object:type_name -> google.protobuf.Any
	6,  // 3: helm.v1alpha1.K8sObjectList.items:type_name -> helm.v1alpha1.K8sObject
	38, // 4: helm.v1alpha1.InstallChartResponse.entries:type_name -> helm.v1alpha1.InstallChartResponse.EntriesEntry
	39, // 5: helm.v1alpha1.UninstallChartRequest.options:type_name -> helm.v1alpha1.UninstallChartRequest.OptionsEntry
	40, // 6: helm.v1alpha1.PodStatus.labels:type_name -> helm.v1alpha1.PodStatus.LabelsEntry
	16, // 7: helm.v1alpha1.PodStatus.containers:type_name -> helm.v1alpha1.ContainerStatus
	15, // 8: helm.v1alpha1.PodsStatusList.pods:type_name -> helm.v1alpha1.PodStatus
	17, // 9: helm.v1alpha1.ListPodStatusResponse.data:type_name -> helm.v1alpha1.PodsStatusList
	41, // 10: helm.v1alpha1.ChartSpec.values:type_name -> helm.v1alpha1.ChartSpec.ValuesEntry
	27, // 11: helm.v1alpha1.UpgradeChartRequest.chart:type_name -> helm.v1alpha1.ChartSpec
	33, // 12: helm.v1alpha1.ListChartVersionsResponse.versions:type_name -> helm.v1alpha1.ChartVersionInfo
	43, // 13: helm.v1alpha1.ListInstalledChartsResponse.data:type_name -> google.protobuf.Any
	44, // 14: helm.v1alpha1.InstalledChart.updated:type_name -> google.protobuf.Timestamp
	42, // 15: helm.v1alpha1.InstalledChart.values:type_name -> helm.v1alpha1.InstalledChart.ValuesEntry
	7,  // 16: helm.v1alpha1.InstallChartResponse.EntriesEntry.value:type_name -> helm.v1alpha1.K8sObjectList
	0,  // 17: helm.v1alpha1.HelmManagerService.ListCharts:input_type -> helm.v1alpha1.ListChartsRequest
	4,  // 18: helm.v1alpha1.HelmManagerService.ConfigureRepo:input_type -> helm.v1alpha1.ConfigureRepoRequest
	8,  // 19: helm.v1alpha1.HelmManagerService.InstallChart:input_type -> helm.v1alpha1.InstallChartRequest
	10, // 20: helm.v1alpha1.HelmManagerService.UninstallChart:input_type -> helm.v1alpha1.UninstallChartRequest
	12, // 21: helm.v1alpha1.HelmManagerService.WatchInstallStatus:input_type -> helm.v1alpha1.WatchInstallStatusRequest
	14, // 22: helm.v1alpha1.HelmManagerService.ListPodStatus:input_type -> helm.v1alpha1.ListPodStatusRequest
	19, // 23: helm.v1alpha1.HelmManagerService.CheckApisixRoute:input_type -> helm.v1alpha1.CheckApisixRouteRequest
	21, // 24: helm.v1alpha1.HelmManagerService.CreateChartApplication:input_type -> helm.v1alpha1.CreateChartApplicationRequest
	23, // 25: helm.v1alpha1.HelmManagerService.GetPodLogs:input_type -> helm.v1alpha1.GetPodLogsRequest
	25, // 26: helm.v1alpha1.HelmManagerService.CheckPodTerminal:input_type -> helm.v1alpha1.CheckPodTerminalRequest
	28, // 27: helm.v1alpha1.HelmManagerService.UpgradeChart:input_type -> helm.v1alpha1.UpgradeChartRequest
	30, // 28: helm.v1alpha1.HelmManagerService.RollbackChart:input_type -> helm.v1alpha1.RollbackChartRequest
	32, // 29: helm.v1alpha1.HelmManagerService.ListChartVersions:input_type -> helm.v1alpha1.ListChartVersionsRequest
	35, // 30: helm.v1alpha1.HelmManagerService.ListInstalledCharts:input_type -> helm.v1alpha1.ListInstalledChartsRequest
	3,  // 31: helm.v1alpha1.HelmManagerService.ListCharts:output_type -> helm.v1alpha1.ListChartsResponse
	5,  // 32: helm.v1alpha1.HelmManagerService.ConfigureRepo:output_type -> helm.v1alpha1.ConfigureRepoResponse
	9,  // 33: helm.v1alpha1.HelmManagerService.InstallChart:output_type -> helm.v1alpha1.InstallChartResponse
	11, // 34: helm.v1alpha1.HelmManagerService.UninstallChart:output_type -> helm.v1alpha1.UninstallChartResponse
	13, // 35: helm.v1alpha1.HelmManagerService.WatchInstallStatus:output_type -> helm.v1alpha1.InstallStatus
	18, // 36: helm.v1alpha1.HelmManagerService.ListPodStatus:output_type -> helm.v1alpha1.ListPodStatusResponse
	20, // 37: helm.v1alpha1.HelmManagerService.CheckApisixRoute:output_type -> helm.v1alpha1.CheckApisixRouteResponse
	22, // 38: helm.v1alpha1.HelmManagerService.CreateChartApplication:output_type -> helm.v1alpha1.CreateChartApplicationResponse
	24, // 39: helm.v1alpha1.HelmManagerService.GetPodLogs:output_type -> helm.v1alpha1.LogChunk
	26, // 40: helm.v1alpha1.HelmManagerService.CheckPodTerminal:output_type -> helm.v1alpha1.CheckPodTerminalResponse
	29, // 41: helm.v1alpha1.HelmManagerService.UpgradeChart:output_type -> helm.v1alpha1.UpgradeChartResponse
	31, // 42: helm.v1alpha1.HelmManagerService.RollbackChart:output_type -> helm.v1alpha1.RollbackChartResponse
	34, // 43: helm.v1alpha1.HelmManagerService.ListChartVersions:output_type -> helm.v1alpha1.ListChartVersionsResponse
	36, // 44: helm.v1alpha1.HelmManagerService.ListInstalledCharts:output_type -> helm.v1alpha1.ListInstalledChartsResponse
	31, // [31:45] is the sub-list for method output_type
	17, // [17:31] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_helm_service_proto_init() }
func file_helm_service_proto_init() {
	if File_helm_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_helm_service_proto_rawDesc), len(file_helm_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_helm_service_proto_goTypes,
		DependencyIndexes: file_helm_service_proto_depIdxs,
		MessageInfos:      file_helm_service_proto_msgTypes,
	}.Build()
	File_helm_service_proto = out.File
	file_helm_service_proto_goTypes = nil
	file_helm_service_proto_depIdxs = nil
}
