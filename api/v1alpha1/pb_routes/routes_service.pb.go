// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0--rc1
// source: routes_service.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 路由配置数据结构
type RouteConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                   // 路由ID
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                               // 路由名称
	Hosts           []string               `protobuf:"bytes,3,rep,name=hosts,proto3" json:"hosts,omitempty"`                                                                             // 匹配的host列表
	Uris            []string               `protobuf:"bytes,4,rep,name=uris,proto3" json:"uris,omitempty"`                                                                               // 匹配的URI列表
	Labels          map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 标签
	UpstreamId      string                 `protobuf:"bytes,6,opt,name=upstream_id,json=upstreamId,proto3" json:"upstream_id,omitempty"`                                                 // 关联的上游ID
	PluginConfig    string                 `protobuf:"bytes,7,opt,name=plugin_config,json=pluginConfig,proto3" json:"plugin_config,omitempty"`                                           // 插件配置(JSON格式)
	EnableWebsocket bool                   `protobuf:"varint,8,opt,name=enable_websocket,json=enableWebsocket,proto3" json:"enable_websocket,omitempty"`                                 // 是否启用WebSocket
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RouteConfig) Reset() {
	*x = RouteConfig{}
	mi := &file_routes_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteConfig) ProtoMessage() {}

func (x *RouteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteConfig.ProtoReflect.Descriptor instead.
func (*RouteConfig) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{0}
}

func (x *RouteConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RouteConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RouteConfig) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *RouteConfig) GetUris() []string {
	if x != nil {
		return x.Uris
	}
	return nil
}

func (x *RouteConfig) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RouteConfig) GetUpstreamId() string {
	if x != nil {
		return x.UpstreamId
	}
	return ""
}

func (x *RouteConfig) GetPluginConfig() string {
	if x != nil {
		return x.PluginConfig
	}
	return ""
}

func (x *RouteConfig) GetEnableWebsocket() bool {
	if x != nil {
		return x.EnableWebsocket
	}
	return false
}

// 上游服务配置
type UpstreamConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                   // 上游ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                               // 上游名称
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`                                                                               // 类型(roundrobin/chash)
	Nodes         []*UpstreamConfig_Node `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`                                                                             // 节点列表
	Labels        map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 标签
	Scheme        string                 `protobuf:"bytes,6,opt,name=scheme,proto3" json:"scheme,omitempty"`                                                                           // 协议(http/https)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamConfig) Reset() {
	*x = UpstreamConfig{}
	mi := &file_routes_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamConfig) ProtoMessage() {}

func (x *UpstreamConfig) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamConfig.ProtoReflect.Descriptor instead.
func (*UpstreamConfig) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpstreamConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpstreamConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpstreamConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpstreamConfig) GetNodes() []*UpstreamConfig_Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *UpstreamConfig) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpstreamConfig) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

// 创建路由请求
type CreateRouteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"` // 命名空间
	Route         *RouteConfig           `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`         // 路由配置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRouteRequest) Reset() {
	*x = CreateRouteRequest{}
	mi := &file_routes_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteRequest) ProtoMessage() {}

func (x *CreateRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteRequest.ProtoReflect.Descriptor instead.
func (*CreateRouteRequest) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRouteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateRouteRequest) GetRoute() *RouteConfig {
	if x != nil {
		return x.Route
	}
	return nil
}

// 创建路由响应
type CreateRouteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`               // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                // 返回消息
	RouteId       string                 `protobuf:"bytes,3,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"` // 创建的路由ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRouteResponse) Reset() {
	*x = CreateRouteResponse{}
	mi := &file_routes_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteResponse) ProtoMessage() {}

func (x *CreateRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteResponse.ProtoReflect.Descriptor instead.
func (*CreateRouteResponse) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRouteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateRouteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateRouteResponse) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

// 更新路由请求
type UpdateRouteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`            // 命名空间
	RouteId       string                 `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"` // 要更新的路由ID
	Route         *RouteConfig           `protobuf:"bytes,3,opt,name=route,proto3" json:"route,omitempty"`                    // 新的路由配置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRouteRequest) Reset() {
	*x = UpdateRouteRequest{}
	mi := &file_routes_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteRequest) ProtoMessage() {}

func (x *UpdateRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteRequest.ProtoReflect.Descriptor instead.
func (*UpdateRouteRequest) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRouteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateRouteRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *UpdateRouteRequest) GetRoute() *RouteConfig {
	if x != nil {
		return x.Route
	}
	return nil
}

// 更新路由响应
type UpdateRouteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 返回消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRouteResponse) Reset() {
	*x = UpdateRouteResponse{}
	mi := &file_routes_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteResponse) ProtoMessage() {}

func (x *UpdateRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteResponse.ProtoReflect.Descriptor instead.
func (*UpdateRouteResponse) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateRouteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateRouteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 删除路由请求
type DeleteRouteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`            // 命名空间
	RouteId       string                 `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"` // 要删除的路由ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRouteRequest) Reset() {
	*x = DeleteRouteRequest{}
	mi := &file_routes_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRouteRequest) ProtoMessage() {}

func (x *DeleteRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRouteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRouteRequest) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRouteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteRouteRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

// 删除路由响应
type DeleteRouteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 返回消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRouteResponse) Reset() {
	*x = DeleteRouteResponse{}
	mi := &file_routes_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRouteResponse) ProtoMessage() {}

func (x *DeleteRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRouteResponse.ProtoReflect.Descriptor instead.
func (*DeleteRouteResponse) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRouteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteRouteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 查询路由请求
type GetRouteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`            // 命名空间
	RouteId       string                 `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"` // 要查询的路由ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRouteRequest) Reset() {
	*x = GetRouteRequest{}
	mi := &file_routes_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteRequest) ProtoMessage() {}

func (x *GetRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteRequest.ProtoReflect.Descriptor instead.
func (*GetRouteRequest) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetRouteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetRouteRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

// 查询路由响应
type GetRouteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 返回消息
	Route         *RouteConfig           `protobuf:"bytes,3,opt,name=route,proto3" json:"route,omitempty"`      // 路由配置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRouteResponse) Reset() {
	*x = GetRouteResponse{}
	mi := &file_routes_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteResponse) ProtoMessage() {}

func (x *GetRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteResponse.ProtoReflect.Descriptor instead.
func (*GetRouteResponse) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetRouteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetRouteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetRouteResponse) GetRoute() *RouteConfig {
	if x != nil {
		return x.Route
	}
	return nil
}

// 列出路由请求
type ListRoutesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"` // 命名空间
	ReleaseName   string                 `protobuf:"bytes,2,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 标签选择器
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                                                      // 每页数量
	PageToken     string                 `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`                                                    // 分页令牌
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRoutesRequest) Reset() {
	*x = ListRoutesRequest{}
	mi := &file_routes_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesRequest) ProtoMessage() {}

func (x *ListRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesRequest.ProtoReflect.Descriptor instead.
func (*ListRoutesRequest) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListRoutesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListRoutesRequest) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *ListRoutesRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListRoutesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRoutesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// 列出路由响应
type ListRoutesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                   // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                                    // 返回消息
	Routes        []*RouteConfig         `protobuf:"bytes,3,rep,name=routes,proto3" json:"routes,omitempty"`                                      // 路由列表
	NextPageToken string                 `protobuf:"bytes,4,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // 下一页令牌
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRoutesResponse) Reset() {
	*x = ListRoutesResponse{}
	mi := &file_routes_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesResponse) ProtoMessage() {}

func (x *ListRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesResponse.ProtoReflect.Descriptor instead.
func (*ListRoutesResponse) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListRoutesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListRoutesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListRoutesResponse) GetRoutes() []*RouteConfig {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *ListRoutesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// 上游服务相关接口
type CreateUpstreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Upstream      *UpstreamConfig        `protobuf:"bytes,2,opt,name=upstream,proto3" json:"upstream,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUpstreamRequest) Reset() {
	*x = CreateUpstreamRequest{}
	mi := &file_routes_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUpstreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpstreamRequest) ProtoMessage() {}

func (x *CreateUpstreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpstreamRequest.ProtoReflect.Descriptor instead.
func (*CreateUpstreamRequest) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{12}
}

func (x *CreateUpstreamRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateUpstreamRequest) GetUpstream() *UpstreamConfig {
	if x != nil {
		return x.Upstream
	}
	return nil
}

type CreateUpstreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UpstreamId    string                 `protobuf:"bytes,3,opt,name=upstream_id,json=upstreamId,proto3" json:"upstream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUpstreamResponse) Reset() {
	*x = CreateUpstreamResponse{}
	mi := &file_routes_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUpstreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpstreamResponse) ProtoMessage() {}

func (x *CreateUpstreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpstreamResponse.ProtoReflect.Descriptor instead.
func (*CreateUpstreamResponse) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{13}
}

func (x *CreateUpstreamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateUpstreamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateUpstreamResponse) GetUpstreamId() string {
	if x != nil {
		return x.UpstreamId
	}
	return ""
}

type UpstreamConfig_Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`      // 节点主机
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`     // 节点端口
	Weight        int32                  `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"` // 权重
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamConfig_Node) Reset() {
	*x = UpstreamConfig_Node{}
	mi := &file_routes_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamConfig_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamConfig_Node) ProtoMessage() {}

func (x *UpstreamConfig_Node) ProtoReflect() protoreflect.Message {
	mi := &file_routes_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamConfig_Node.ProtoReflect.Descriptor instead.
func (*UpstreamConfig_Node) Descriptor() ([]byte, []int) {
	return file_routes_service_proto_rawDescGZIP(), []int{1, 1}
}

func (x *UpstreamConfig_Node) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UpstreamConfig_Node) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UpstreamConfig_Node) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

var File_routes_service_proto protoreflect.FileDescriptor

const file_routes_service_proto_rawDesc = "" +
	"\n" +
	"\x14routes_service.proto\x12\x0fapisix.v1alpha1\x1a\x1cgoogle/api/annotations.proto\"\xc9\x02\n" +
	"\vRouteConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05hosts\x18\x03 \x03(\tR\x05hosts\x12\x12\n" +
	"\x04uris\x18\x04 \x03(\tR\x04uris\x12@\n" +
	"\x06labels\x18\x05 \x03(\v2(.apisix.v1alpha1.RouteConfig.LabelsEntryR\x06labels\x12\x1f\n" +
	"\vupstream_id\x18\x06 \x01(\tR\n" +
	"upstreamId\x12#\n" +
	"\rplugin_config\x18\a \x01(\tR\fpluginConfig\x12)\n" +
	"\x10enable_websocket\x18\b \x01(\bR\x0fenableWebsocket\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe4\x02\n" +
	"\x0eUpstreamConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12:\n" +
	"\x05nodes\x18\x04 \x03(\v2$.apisix.v1alpha1.UpstreamConfig.NodeR\x05nodes\x12C\n" +
	"\x06labels\x18\x05 \x03(\v2+.apisix.v1alpha1.UpstreamConfig.LabelsEntryR\x06labels\x12\x16\n" +
	"\x06scheme\x18\x06 \x01(\tR\x06scheme\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aF\n" +
	"\x04Node\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x16\n" +
	"\x06weight\x18\x03 \x01(\x05R\x06weight\"f\n" +
	"\x12CreateRouteRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x122\n" +
	"\x05route\x18\x02 \x01(\v2\x1c.apisix.v1alpha1.RouteConfigR\x05route\"d\n" +
	"\x13CreateRouteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x19\n" +
	"\broute_id\x18\x03 \x01(\tR\arouteId\"\x81\x01\n" +
	"\x12UpdateRouteRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x19\n" +
	"\broute_id\x18\x02 \x01(\tR\arouteId\x122\n" +
	"\x05route\x18\x03 \x01(\v2\x1c.apisix.v1alpha1.RouteConfigR\x05route\"I\n" +
	"\x13UpdateRouteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"M\n" +
	"\x12DeleteRouteRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x19\n" +
	"\broute_id\x18\x02 \x01(\tR\arouteId\"I\n" +
	"\x13DeleteRouteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"J\n" +
	"\x0fGetRouteRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x19\n" +
	"\broute_id\x18\x02 \x01(\tR\arouteId\"z\n" +
	"\x10GetRouteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x122\n" +
	"\x05route\x18\x03 \x01(\v2\x1c.apisix.v1alpha1.RouteConfigR\x05route\"\x93\x02\n" +
	"\x11ListRoutesRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12!\n" +
	"\frelease_name\x18\x02 \x01(\tR\vreleaseName\x12F\n" +
	"\x06labels\x18\x03 \x03(\v2..apisix.v1alpha1.ListRoutesRequest.LabelsEntryR\x06labels\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x05 \x01(\tR\tpageToken\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa6\x01\n" +
	"\x12ListRoutesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x124\n" +
	"\x06routes\x18\x03 \x03(\v2\x1c.apisix.v1alpha1.RouteConfigR\x06routes\x12&\n" +
	"\x0fnext_page_token\x18\x04 \x01(\tR\rnextPageToken\"r\n" +
	"\x15CreateUpstreamRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12;\n" +
	"\bupstream\x18\x02 \x01(\v2\x1f.apisix.v1alpha1.UpstreamConfigR\bupstream\"m\n" +
	"\x16CreateUpstreamResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vupstream_id\x18\x03 \x01(\tR\n" +
	"upstreamId2\xe9\x06\n" +
	"\x14APISIXGatewayService\x12\x85\x01\n" +
	"\vCreateRoute\x12#.apisix.v1alpha1.CreateRouteRequest\x1a$.apisix.v1alpha1.CreateRouteResponse\"+\x82\xd3\xe4\x93\x02%:\x05route\"\x1c/v1alpha1/{namespace}/routes\x12\x90\x01\n" +
	"\vUpdateRoute\x12#.apisix.v1alpha1.UpdateRouteRequest\x1a$.apisix.v1alpha1.UpdateRouteResponse\"6\x82\xd3\xe4\x93\x020:\x05route\x1a'/v1alpha1/{namespace}/routes/{route_id}\x12\x89\x01\n" +
	"\vDeleteRoute\x12#.apisix.v1alpha1.DeleteRouteRequest\x1a$.apisix.v1alpha1.DeleteRouteResponse\"/\x82\xd3\xe4\x93\x02)*'/v1alpha1/{namespace}/routes/{route_id}\x12\x80\x01\n" +
	"\bGetRoute\x12 .apisix.v1alpha1.GetRouteRequest\x1a!.apisix.v1alpha1.GetRouteResponse\"/\x82\xd3\xe4\x93\x02)\x12'/v1alpha1/{namespace}/routes/{route_id}\x12\x8f\x01\n" +
	"\n" +
	"ListRoutes\x12\".apisix.v1alpha1.ListRoutesRequest\x1a#.apisix.v1alpha1.ListRoutesResponse\"8\x82\xd3\xe4\x93\x022\x120/v1alpha1/{namespace}/routes/{release_name}/list\x12\x94\x01\n" +
	"\x0eCreateUpstream\x12&.apisix.v1alpha1.CreateUpstreamRequest\x1a'.apisix.v1alpha1.CreateUpstreamResponse\"1\x82\xd3\xe4\x93\x02+:\bupstream\"\x1f/v1alpha1/{namespace}/upstreamsB\x0eZ\f./pkg/pb/;pbb\x06proto3"

var (
	file_routes_service_proto_rawDescOnce sync.Once
	file_routes_service_proto_rawDescData []byte
)

func file_routes_service_proto_rawDescGZIP() []byte {
	file_routes_service_proto_rawDescOnce.Do(func() {
		file_routes_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_routes_service_proto_rawDesc), len(file_routes_service_proto_rawDesc)))
	})
	return file_routes_service_proto_rawDescData
}

var file_routes_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_routes_service_proto_goTypes = []any{
	(*RouteConfig)(nil),            // 0: apisix.v1alpha1.RouteConfig
	(*UpstreamConfig)(nil),         // 1: apisix.v1alpha1.UpstreamConfig
	(*CreateRouteRequest)(nil),     // 2: apisix.v1alpha1.CreateRouteRequest
	(*CreateRouteResponse)(nil),    // 3: apisix.v1alpha1.CreateRouteResponse
	(*UpdateRouteRequest)(nil),     // 4: apisix.v1alpha1.UpdateRouteRequest
	(*UpdateRouteResponse)(nil),    // 5: apisix.v1alpha1.UpdateRouteResponse
	(*DeleteRouteRequest)(nil),     // 6: apisix.v1alpha1.DeleteRouteRequest
	(*DeleteRouteResponse)(nil),    // 7: apisix.v1alpha1.DeleteRouteResponse
	(*GetRouteRequest)(nil),        // 8: apisix.v1alpha1.GetRouteRequest
	(*GetRouteResponse)(nil),       // 9: apisix.v1alpha1.GetRouteResponse
	(*ListRoutesRequest)(nil),      // 10: apisix.v1alpha1.ListRoutesRequest
	(*ListRoutesResponse)(nil),     // 11: apisix.v1alpha1.ListRoutesResponse
	(*CreateUpstreamRequest)(nil),  // 12: apisix.v1alpha1.CreateUpstreamRequest
	(*CreateUpstreamResponse)(nil), // 13: apisix.v1alpha1.CreateUpstreamResponse
	nil,                            // 14: apisix.v1alpha1.RouteConfig.LabelsEntry
	nil,                            // 15: apisix.v1alpha1.UpstreamConfig.LabelsEntry
	(*UpstreamConfig_Node)(nil),    // 16: apisix.v1alpha1.UpstreamConfig.Node
	nil,                            // 17: apisix.v1alpha1.ListRoutesRequest.LabelsEntry
}
var file_routes_service_proto_depIdxs = []int32{
	14, // 0: apisix.v1alpha1.RouteConfig.labels:type_name -> apisix.v1alpha1.RouteConfig.LabelsEntry
	16, // 1: apisix.v1alpha1.UpstreamConfig.nodes:type_name -> apisix.v1alpha1.UpstreamConfig.Node
	15, // 2: apisix.v1alpha1.UpstreamConfig.labels:type_name -> apisix.v1alpha1.UpstreamConfig.LabelsEntry
	0,  // 3: apisix.v1alpha1.CreateRouteRequest.route:type_name -> apisix.v1alpha1.RouteConfig
	0,  // 4: apisix.v1alpha1.UpdateRouteRequest.route:type_name -> apisix.v1alpha1.RouteConfig
	0,  // 5: apisix.v1alpha1.GetRouteResponse.route:type_name -> apisix.v1alpha1.RouteConfig
	17, // 6: apisix.v1alpha1.ListRoutesRequest.labels:type_name -> apisix.v1alpha1.ListRoutesRequest.LabelsEntry
	0,  // 7: apisix.v1alpha1.ListRoutesResponse.routes:type_name -> apisix.v1alpha1.RouteConfig
	1,  // 8: apisix.v1alpha1.CreateUpstreamRequest.upstream:type_name -> apisix.v1alpha1.UpstreamConfig
	2,  // 9: apisix.v1alpha1.APISIXGatewayService.CreateRoute:input_type -> apisix.v1alpha1.CreateRouteRequest
	4,  // 10: apisix.v1alpha1.APISIXGatewayService.UpdateRoute:input_type -> apisix.v1alpha1.UpdateRouteRequest
	6,  // 11: apisix.v1alpha1.APISIXGatewayService.DeleteRoute:input_type -> apisix.v1alpha1.DeleteRouteRequest
	8,  // 12: apisix.v1alpha1.APISIXGatewayService.GetRoute:input_type -> apisix.v1alpha1.GetRouteRequest
	10, // 13: apisix.v1alpha1.APISIXGatewayService.ListRoutes:input_type -> apisix.v1alpha1.ListRoutesRequest
	12, // 14: apisix.v1alpha1.APISIXGatewayService.CreateUpstream:input_type -> apisix.v1alpha1.CreateUpstreamRequest
	3,  // 15: apisix.v1alpha1.APISIXGatewayService.CreateRoute:output_type -> apisix.v1alpha1.CreateRouteResponse
	5,  // 16: apisix.v1alpha1.APISIXGatewayService.UpdateRoute:output_type -> apisix.v1alpha1.UpdateRouteResponse
	7,  // 17: apisix.v1alpha1.APISIXGatewayService.DeleteRoute:output_type -> apisix.v1alpha1.DeleteRouteResponse
	9,  // 18: apisix.v1alpha1.APISIXGatewayService.GetRoute:output_type -> apisix.v1alpha1.GetRouteResponse
	11, // 19: apisix.v1alpha1.APISIXGatewayService.ListRoutes:output_type -> apisix.v1alpha1.ListRoutesResponse
	13, // 20: apisix.v1alpha1.APISIXGatewayService.CreateUpstream:output_type -> apisix.v1alpha1.CreateUpstreamResponse
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_routes_service_proto_init() }
func file_routes_service_proto_init() {
	if File_routes_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_routes_service_proto_rawDesc), len(file_routes_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_routes_service_proto_goTypes,
		DependencyIndexes: file_routes_service_proto_depIdxs,
		MessageInfos:      file_routes_service_proto_msgTypes,
	}.Build()
	File_routes_service_proto = out.File
	file_routes_service_proto_goTypes = nil
	file_routes_service_proto_depIdxs = nil
}
